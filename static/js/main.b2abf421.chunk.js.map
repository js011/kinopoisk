{"version":3,"sources":["utils/apies.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","redux/movies/movies.actions.js","redux/movies/movies.types.js","redux/filters/filters.actions.js","redux/filters/filters.types.js","hoc/WithAuth.jsx","components/Header/Authentication/AuthenticationForm.jsx","components/Header/Authentication/Authentication.jsx","components/UI Components/UIDropdown.jsx","components/Header/User.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Pagination.jsx","components/Filters/PrimaryReleaseYear.jsx","data/primary_release_year.js","components/Filters/Genres/Genres.jsx","components/Filters/Genres/GenresContainer.jsx","hoc/WithFilters.jsx","components/Filters/Filters.jsx","data/months.js","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MovieHeader.jsx","components/pages/MoviePage/Tabs/MovieMedia.jsx","components/pages/MoviePage/Tabs/MovieActors.jsx","components/pages/MoviePage/MoviePage.jsx","components/pages/UserPage/Tabs/FavouriteMovies.jsx","components/pages/UserPage/Tabs/Watchlist.jsx","components/pages/UserPage/UserPage.jsx","App.jsx","serviceWorker.js","utils/cookies.js","redux/auth/auth.reducer.js","redux/movies/movies.reducer.js","redux/filters/filters.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["api_url","api_img_url","api_key_movieDB_v3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","React","Component","fetchAuth","session_id","dispatch","type","get","language","user","updateAuth","payload","onLogOut","toggleUserModal","movies","toggleAuthFormModal","show","fetchFavouriteMovies","account_id","favouriteMovies","fetchWatchlist","watchlist","clearFavouriteMoviesAndWatchList","updateFavouriteMovies","media_id","getState","favorite","i","length","Number","id","post","media_type","updateWatchlist","onChangeFilters","e","target","name","value","onChangePage","page","resetFilters","onChangeTotalPages","total_pages","mapStateToProps","state","auth","filters","mapDispatchToProps","authActions","bindActionCreators","moviesActions","filtersActions","withAuth","connect","this","props","cookies","Cookies","getUser","setState","submitting","data","username","password","request_token","set","path","maxAge","prevState","errors","base","status_message","validateFields","repeatPassword","onChange","handleBlur","Object","keys","onSubmit","preventDefault","getClassForInpur","errorName","classNames","invalid","className","htmlFor","placeholder","onBlur","disabled","Authentication","toggleModal","showAuthFormModal","onClick","href","rel","Modal","isOpen","toggle","ModalBody","UIDropdown","toggleShow","showUserModal","render","style","position","children","defaultProps","top","right","bottom","left","handleLogOut","delete","src","avatar","tmdb","avatar_path","alt","to","SortBy","sort_by","sortByOptions","map","option","key","label","PureComponent","bind","PrimaryReleaseYear","primary_release_year_options","primary_release_year","Genres","with_genres","allGenres","onChangeGenres","item","checked","indexOf","String","GenresContainer","filter","link","genres","withFilters","background","months","month","shortName","fullName","getMonthNameOnMonthNumber","movie","release_date","substr","toogleMovieModal","showMovieModal","forEachFavouriteMoviesOrWatchlist","moviesArr","starMovie","forEach","favourite","releaseDate","poster_path","vote_average","title","MoreHoriz","Star","StarBorder","Bookmark","BookmarkBorder","MoviesList","watchList","MoviesHOC","getSettingsMovies","nameState","apiParams","results","getMovies","join","p","_","isEqual","MovieHeader","forEachGenresCompaniesCountries","arr","resultArr","push","backdrop_path","belongs_to_collection","height","width","original_title","tagline","lineHeight","original_language","production_companies","production_countries","overview","MovieMedia","videos","images","movie_id","append_to_response","include_image_language","posters","frameBorder","allow","allowFullScreen","file_path","MovieActors","actors","cast","actor","profile_path","character","match","activeTab","Nav","tabs","NavItem","activeClassName","TabContent","tab","NavLink","classnames","active","TabPane","tabId","Row","Col","sm","FavouriteMovies","Watchlist","exact","component","MoviesPage","UserPage","MoviePage","Boolean","window","location","hostname","initialState","isAuth","Date","getFullYear","combineReducers","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","next","remove","WebFont","load","google","families","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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AO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAGT,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAGT,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAGT,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAGT,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CACEwF,MAAO,OACPxF,MAAO,QAET,CAC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","file":"static/js/main.b2abf421.chunk.js","sourcesContent":["import React from 'react'\r\nimport queryString from 'query-string'\r\n\r\nexport const api_url = 'https://api.themoviedb.org/3'\r\n\r\nexport const api_img_url = 'https://image.tmdb.org/t/p/w500'\r\n\r\nexport const api_key_movieDB_v3 = '2bf9f43ff01f800a4b2838b95fcce99e'\r\n\r\nexport const api_key_movieDB_v4 =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYmY5ZjQzZmYwMWY4MDBhNGIyODM4Yjk1ZmNjZTk5ZSIsInN1YiI6IjVjZTkyOWU3YzNhMzY4MWM0ZTFlODRkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fffZy6W_ZCD20rApqm9asph-hWYo_w8zjvPNLyZf-wY'\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n      .then((response) => {\r\n        if (response.status < 400) {\r\n          return resolve(response.json())\r\n        } else {\r\n          throw response\r\n        }\r\n      })\r\n      .catch((response) => response.json().then((error) => reject(error)))\r\n  })\r\n}\r\n\r\nexport default class CallApi extends React.Component {\r\n  static get(url, options = {}) {\r\n    const { params } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n  }\r\n  static post(url, options = {}) {\r\n    const { params, body } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    )\r\n  }\r\n  static delete(url, options = {}) {\r\n    const { params, body } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    )\r\n  }\r\n}\r\n","import CallApi from '../../utils/apies'\r\nimport * as types from './auth.types'\r\n\r\nexport const fetchAuth = (session_id) => (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_AUTH,\r\n  })\r\n  CallApi.get('/account', { params: { session_id, language: 'ru-RU' } })\r\n    .then((user) => {\r\n      dispatch(updateAuth({ user, session_id }))\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_AUTH,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateAuth = ({ user, session_id }) => ({\r\n  type: types.UPDATE_AUTH,\r\n  payload: {\r\n    user,\r\n    session_id,\r\n  },\r\n})\r\n\r\nexport const onLogOut = () => {\r\n  return {\r\n    type: types.LOGOUT,\r\n  }\r\n}\r\n\r\nexport const toggleUserModal = (movies) => {\r\n  return {\r\n    type: types.TOGGLE_USER_MODAL,\r\n    payload: movies,\r\n  }\r\n}\r\n\r\nexport const toggleAuthFormModal = (show) => {\r\n  return {\r\n    type: types.TOGGLE_AUTH_FORM_MODAL,\r\n    payload: show,\r\n  }\r\n}\r\n","export const UPDATE_AUTH = 'UPDATE_AUTH'\r\nexport const FETCH_REQUEST_AUTH = 'FETCH_REQUEST_AUTH'\r\nexport const FETCH_ERROR_AUTH = 'FETCH_ERROR_AUTH'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const TOGGLE_USER_MODAL = 'TOGGLE_USER_MODAL'\r\nexport const TOGGLE_AUTH_FORM_MODAL = 'TOGGLE_AUTH_FORM_MODAL'\r\n\r\n","import CallApi from '../../utils/apies'\r\nimport * as types from './movies.types'\r\n\r\nexport const fetchFavouriteMovies = ({ session_id, account_id }) => (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_FAVOURITE_MOVIES,\r\n  })\r\n  CallApi.get(`/account/${account_id}/favorite/movies`, {\r\n    params: { session_id, language: 'ru-RU' },\r\n  })\r\n    .then((favouriteMovies) => {\r\n      dispatch({\r\n        type: types.FETCH_SUCCESS_FAVOURITE_MOVIES,\r\n        payload: favouriteMovies,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_FAVOURITE_MOVIES,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const fetchWatchlist = ({ session_id, account_id }) => (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_WATCHLIST,\r\n  })\r\n  CallApi.get(`/account/${account_id}/watchlist/movies`, {\r\n    params: { session_id, language: 'ru-RU' },\r\n  })\r\n    .then((watchlist) => {\r\n      dispatch({\r\n        type: types.FETCH_SUCCESS_WATCHLIST,\r\n        payload: watchlist,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_WATCHLIST,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const clearFavouriteMoviesAndWatchList = () => ({\r\n  type: types.CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST,\r\n})\r\n\r\nexport const updateFavouriteMovies = ({ account_id, session_id, media_id }) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let favorite = true\r\n  for (let i = 0; i < getState().movies.favouriteMovies.length; i++) {\r\n    if (Number(getState().movies.favouriteMovies[i].id) === Number(media_id)) {\r\n      favorite = false\r\n    }\r\n  }\r\n  CallApi.post(`/account/${account_id}/favorite`, {\r\n    params: {\r\n      session_id,\r\n      language: 'ru-RU',\r\n    },\r\n    body: {\r\n      media_type: 'movie',\r\n      media_id,\r\n      favorite,\r\n    },\r\n  })\r\n    .then(() => {\r\n      return CallApi.get(`/account/${account_id}/favorite/movies`, {\r\n        params: { session_id, language: 'ru-RU' },\r\n      }).then((favouriteMovies) => {\r\n        dispatch({\r\n          type: types.UPDATE_SUCCESS_FAVOURITE_MOVIES,\r\n          payload: favouriteMovies,\r\n        })\r\n      })\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.UPDATE_ERROR_FAVOURITE_MOVIES,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateWatchlist = ({ account_id, session_id, media_id }) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let watchlist = true\r\n  for (let i = 0; i < getState().movies.watchlist.length; i++) {\r\n    if (Number(getState().movies.watchlist[i].id) === Number(media_id)) {\r\n      watchlist = false\r\n    }\r\n  }\r\n  CallApi.post(`/account/${account_id}/watchlist`, {\r\n    params: {\r\n      session_id,\r\n      language: 'ru-RU',\r\n    },\r\n    body: {\r\n      media_type: 'movie',\r\n      media_id,\r\n      watchlist,\r\n    },\r\n  })\r\n    .then(() => {\r\n      return CallApi.get(`/account/${account_id}/watchlist/movies`, {\r\n        params: { session_id, language: 'ru-RU' },\r\n      }).then((watchlist) => {\r\n        dispatch({\r\n          type: types.UPDATE_SUCCESS_WATCHLIST,\r\n          payload: watchlist,\r\n        })\r\n      })\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.UPDATE_ERROR_WATCHLIST,\r\n      })\r\n    })\r\n}","export const FETCH_REQUEST_FAVOURITE_MOVIES = 'FETCH_REQUEST_FAVOURITE_MOVIES'\r\nexport const FETCH_SUCCESS_FAVOURITE_MOVIES = 'FETCH_SUCCESS_FAVOURITE_MOVIES'\r\nexport const FETCH_ERROR_FAVOURITE_MOVIES = 'FETCH_ERROR_FAVOURITE_MOVIES'\r\nexport const CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST =\r\n  'CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST'\r\nexport const FETCH_REQUEST_WATCHLIST = 'FETCH_REQUEST_WATCHLIST'\r\nexport const FETCH_SUCCESS_WATCHLIST = 'FETCH_SUCCESS_WATCHLIST'\r\nexport const FETCH_ERROR_WATCHLIST = 'FETCH_ERROR_WATCHLIST'\r\nexport const UPDATE_SUCCESS_FAVOURITE_MOVIES = 'UPDATE_SUCCESS_FAVOURITE_MOVIES'\r\nexport const UPDATE_ERROR_FAVOURITE_MOVIES = 'UPDATE_ERROR_FAVOURITE_MOVIES'\r\nexport const UPDATE_SUCCESS_WATCHLIST = 'UPDATE_SUCCESS_WATCHLIST'\r\nexport const UPDATE_ERROR_WATCHLIST = 'UPDATE_ERROR_WATCHLIST'\r\n","import * as types from './filters.types'\r\n\r\nexport const onChangeFilters = (e) => {\r\n  const { name, value } = e.target\r\n\r\n  return {\r\n    type: types.ONCHANGE_FILTERS,\r\n    payload: {\r\n      name,\r\n      value,\r\n    },\r\n  }\r\n}\r\n\r\nexport const onChangePage = (page) => {\r\n  return {\r\n    type: types.ONCHANGE_PAGE,\r\n    payload: page,\r\n  }\r\n}\r\n\r\nexport const resetFilters = () => {\r\n  return {\r\n    type: types.RESET_FILTERS,\r\n  }\r\n}\r\n\r\nexport const onChangeTotalPages = (total_pages) => {\r\n  return {\r\n    type: types.ONCHANGE_TOTAL_PAGES,\r\n    payload: total_pages,\r\n  }\r\n}\r\n","export const ONCHANGE_FILTERS = 'ONCHANGE_FILTERS'\r\nexport const ONCHANGE_PAGE = 'ONCHANGE_PAGE'\r\nexport const RESET_FILTERS = 'RESET_FILTERS'\r\nexport const ONCHANGE_TOTAL_PAGES = 'ONCHANGE_TOTAL_PAGES'\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as authActions from '../redux/auth/auth.actions'\r\nimport * as moviesActions from '../redux/movies/movies.actions'\r\nimport * as filtersActions from '../redux/filters/filters.actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    movies: state.movies,\r\n    filters: state.filters,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  authActions: bindActionCreators(authActions, dispatch),\r\n  moviesActions: bindActionCreators(moviesActions, dispatch),\r\n  filtersActions: bindActionCreators(filtersActions, dispatch),\r\n})\r\n\r\nexport const withAuth = (Component) =>\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(\r\n    class WithAuth extends React.Component {\r\n      render() {\r\n        return <Component {...this.props} />\r\n      }\r\n    }\r\n  )\r\n","import React from 'react'\r\nimport CallApi from '../../../utils/apies'\r\nimport classNames from 'classnames'\r\nimport { withAuth } from '../../../hoc/WithAuth.jsx'\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass AuthenticationForm extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      username: 'user_kinopoisk',\r\n      password: 'user_1234',\r\n      repeatPassword: 'user_1234',\r\n      submitting: false,\r\n      errors: {},\r\n    }\r\n  }\r\n\r\n  getUser = () => {\r\n    const { authActions, moviesActions } = this.props\r\n\r\n    this.setState({\r\n      submitting: true,\r\n    })\r\n\r\n    CallApi.get('/authentication/token/new')\r\n      .then((data) => {\r\n        return CallApi.post('/authentication/token/validate_with_login', {\r\n          body: {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            request_token: data.request_token,\r\n          },\r\n        })\r\n      })\r\n      .then((data) => {\r\n        return CallApi.post('/authentication/session/new', {\r\n          body: { request_token: data.request_token },\r\n        })\r\n      })\r\n      .then((data) => {\r\n        cookies.set('session_id', data.session_id, {\r\n          path: '/kinopoisk/',\r\n          maxAge: 2592000,\r\n        })\r\n        return CallApi.get('/account', {\r\n          params: { session_id: data.session_id },\r\n        })\r\n      })\r\n      .then((user) => {\r\n        this.setState(\r\n          {\r\n            submitting: false,\r\n          },\r\n          () => {\r\n            authActions.updateAuth({\r\n              user,\r\n              session_id: cookies.get('session_id'),\r\n            })\r\n            moviesActions.fetchFavouriteMovies({\r\n              session_id: cookies.get('session_id'),\r\n              account_id: user.id,\r\n            })\r\n            moviesActions.fetchWatchlist({\r\n              session_id: cookies.get('session_id'),\r\n              account_id: user.id,\r\n            })\r\n          }\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        this.setState((prevState) => ({\r\n          errors: {\r\n            ...prevState.errors,\r\n            base: error.status_message,\r\n          },\r\n          submitting: false,\r\n        }))\r\n      })\r\n  }\r\n\r\n  validateFields = () => {\r\n    const errors = {}\r\n\r\n    if (this.state.username.length < 5) {\r\n      errors.username = 'Укажите логин, минимум 5 значений'\r\n    }\r\n    if (this.state.password.length < 6) {\r\n      errors.password = 'Укажите пароль, минимум 6 зачений'\r\n    }\r\n    if (this.state.password !== this.state.repeatPassword) {\r\n      errors.repeatPassword = 'Пароли не идентичны'\r\n    }\r\n\r\n    return errors\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState((prevState) => ({\r\n      [name]: value,\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: null,\r\n        base: null,\r\n      },\r\n    }))\r\n  }\r\n\r\n  handleBlur = (e) => {\r\n    const { name } = e.target\r\n    const errors = this.validateFields()\r\n    const error = errors[name]\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: { ...prevState.errors, [name]: error },\r\n      }))\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const errors = this.validateFields()\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState({\r\n        errors: { ...errors },\r\n      })\r\n    } else {\r\n      this.getUser()\r\n    }\r\n  }\r\n\r\n  getClassForInpur = (errorName) => {\r\n    return classNames('form-control', {\r\n      invalid: this.state.errors[errorName],\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      repeatPassword,\r\n      submitting,\r\n      errors,\r\n    } = this.state\r\n    return (\r\n      <form\r\n        className=\"form-group login-form container pl-4 pr-4\"\r\n        onSubmit={this.onSubmit}\r\n      >\r\n        <div className=\"login-form__title\">Авторизация</div>\r\n        <label htmlFor=\"username\">Логин:</label>\r\n        <input\r\n          className={this.getClassForInpur('username')}\r\n          type=\"text\"\r\n          placeholder=\"Логин\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.username && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.username}</div>\r\n        )}\r\n        <label htmlFor=\"password\" className=\"mt-2\">\r\n          Пароль:\r\n        </label>\r\n        <input\r\n          className={this.getClassForInpur('password')}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.password && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.password}</div>\r\n        )}\r\n        <label htmlFor=\"repeatPassword\" className=\"mt-2\">\r\n          Повторите пароль:\r\n        </label>\r\n        <input\r\n          className={this.getClassForInpur('repeatPassword')}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          id=\"repeatPassword\"\r\n          name=\"repeatPassword\"\r\n          value={repeatPassword}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.repeatPassword && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.repeatPassword}</div>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success text-center col-12 mt-4 pb-2\"\r\n          disabled={submitting}\r\n        >\r\n          Отправить\r\n        </button>\r\n        <div className=\"invalid-feedback pl-2 mt-2 text-center\">\r\n          {errors.base}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(AuthenticationForm)\r\n","import React from 'react'\r\nimport { Modal, ModalBody } from 'reactstrap'\r\nimport AuthenticationForm from './AuthenticationForm.jsx'\r\n\r\nexport default class Authentication extends React.Component {\r\n  toggleModal = () => {\r\n    const { showAuthFormModal, toggleAuthFormModal } = this.props\r\n    toggleAuthFormModal(!showAuthFormModal)\r\n  }\r\n\r\n  render() {\r\n    const { showAuthFormModal } = this.props\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"btn btn-outline-warning\"\r\n          type=\"button\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          Войти\r\n        </button>\r\n        <button className=\"ml-2 btn btn-outline-warning\" type=\"button\">\r\n          <a\r\n            href=\"https://www.themoviedb.org/signup\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Регистрация\r\n          </a>\r\n        </button>\r\n        <Modal isOpen={showAuthFormModal} toggle={this.toggleModal}>\r\n          <ModalBody>\r\n            <AuthenticationForm />\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class UIDropdown extends React.Component {\r\n  static defaultProps = {\r\n    position: {\r\n      top: 'auto',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      left: 'auto',\r\n    },\r\n  }\r\n\r\n  toggleShow = () => {\r\n    const { auth, authActions } = this.props\r\n    authActions.toggleUserModal(!auth.showUserModal)\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    return (\r\n      <>\r\n        {this.props.render(this.toggleShow)}\r\n        <div className=\"dropdown__wrapper\">\r\n          {auth.showUserModal && (\r\n            <div\r\n              className=\"dropdown__popover\"\r\n              style={{ ...this.props.position }}\r\n            >\r\n              <div className=\"dropdown__cover\" onClick={this.toggleShow}></div>\r\n              <div className=\"dropdown__wrapper-content\">\r\n                {this.props.children(this.toggleShow)}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\nimport UIDropdown from '../UI Components/UIDropdown.jsx'\r\nimport CallApi from '../../utils/apies'\r\n\r\nclass User extends React.Component {\r\n  handleLogOut = () => {\r\n    const { auth, authActions, moviesActions } = this.props\r\n    CallApi.delete('/authentication/session', {\r\n      body: { session_id: auth.session_id },\r\n    }).then(() => {\r\n      authActions.onLogOut()\r\n      moviesActions.clearFavouriteMoviesAndWatchList()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"dropdown\">\r\n          <UIDropdown\r\n            render={(toggleShow) => (\r\n              <img\r\n                className=\"user-img rounded-circle\"\r\n                src={\r\n                  `https://image.tmdb.org/t/p/w500${user.avatar.tmdb.avatar_path}` ||\r\n                  `https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64`\r\n                }\r\n                alt=\"\"\r\n                onClick={toggleShow}\r\n              />\r\n            )}\r\n            position={{ right: '2.5px', top: '50px' }}\r\n            {...this.props}\r\n          >\r\n            {() => {\r\n              return (\r\n                <div className=\"dropdown__menu\">\r\n                  <div className=\"dropdown__menu-item user-name\">\r\n                    {user.name || user.username}\r\n                    <Link to={`/kinopoisk/profile/${user.id}`}>\r\n                      <p className=\"user-name__sub-title\">Смотреть профиль</p>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"dropdown__menu-item\">\r\n                    <Link to={'/kinopoisk/'} onClick={this.handleLogOut}>\r\n                      Выйти\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }}\r\n          </UIDropdown>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(User)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Authentication from './Authentication/Authentication.jsx'\r\nimport User from './User.jsx'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const { auth, authActions } = this.props\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"pt-2 pb-2 row col-12\">\r\n          <div className=\"title col-4\">\r\n            <p className=\"title__name\">\r\n              <Link to={'/kinopoisk/'}>\r\n                Kino<span className=\"title__sub-name\">poisk</span>\r\n              </Link>\r\n              <span className=\"ml-2 with-TMDB-Api\">\r\n                <a\r\n                  href=\"https://www.themoviedb.org/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  with TMDB Api\r\n                </a>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"search col-6\"></div>\r\n          <div className=\"login col-2\">\r\n            {auth.user ? (\r\n              <User />\r\n            ) : (\r\n              <Authentication\r\n                showAuthFormModal={auth.showAuthFormModal}\r\n                toggleAuthFormModal={authActions.toggleAuthFormModal}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(Header)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class SortBy extends React.PureComponent {\r\n  static propTypes = {\r\n    sort_by: PropTypes.string.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  }\r\n\r\n  static defaultProps = {\r\n    sortByOptions: [\r\n      {\r\n        label: 'Популярные (убывание)',\r\n        value: 'popularity.desc',\r\n      },\r\n      {\r\n        label: 'Популярные (возростание)',\r\n        value: 'popularity.asc',\r\n      },\r\n      {\r\n        label: 'Рейтинг (убывание)',\r\n        value: 'vote_average.desc',\r\n      },\r\n      {\r\n        label: 'Рейтинг (возростание)',\r\n        value: 'vote_average.asc',\r\n      },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { sort_by, onChangeFilters, sortByOptions } = this.props\r\n\r\n    return (\r\n      <select\r\n        className=\"form-control\"\r\n        name=\"sort_by\"\r\n        id=\"sort_by\"\r\n        value={sort_by}\r\n        onChange={onChangeFilters}\r\n      >\r\n        {sortByOptions.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass Pagination extends React.Component {\r\n  render() {\r\n    const { onChangePage, page, total_pages } = this.props\r\n    return (\r\n      <div className=\"pagination form-group row col-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light col-4\"\r\n          onClick={onChangePage.bind(null, page - 1)}\r\n          disabled={page === 1}\r\n        >\r\n          Назад\r\n        </button>\r\n        <div className=\"col-4 total-pages\">{`${page} из ${total_pages}`}</div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light col-4\"\r\n          onClick={onChangePage.bind(null, page + 1)}\r\n          disabled={page === Number(total_pages)}\r\n        >\r\n          Вперед\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(Pagination)\r\n","import React from 'react'\r\nimport { primary_release_year } from '../../data/primary_release_year'\r\n\r\nexport default class PrimaryReleaseYear extends React.Component {\r\n  static defaultProps = {\r\n    primary_release_year_options: [...primary_release_year],\r\n  }\r\n  render() {\r\n    const {\r\n      primary_release_year_options,\r\n      primary_release_year,\r\n      onChangeFilters,\r\n    } = this.props\r\n\r\n    return (\r\n      <>\r\n        <label\r\n          className=\"filters-label primary-release-year\"\r\n          htmlFor=\"primary_release_year\"\r\n        >\r\n          Дата выхода\r\n        </label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"primary_release_year\"\r\n          id=\"primary_release_year\"\r\n          value={primary_release_year}\r\n          onChange={onChangeFilters}\r\n        >\r\n          {primary_release_year_options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","export const primary_release_year = [\r\n  {\r\n    label: '1950',\r\n    value: '1950',\r\n  },\r\n  {\r\n    label: '1951',\r\n    value: '1951',\r\n  },\r\n  {\r\n    label: '1952',\r\n    value: '1952',\r\n  },\r\n  {\r\n    label: '1953',\r\n    value: '1953',\r\n  },\r\n  {\r\n    label: '1954',\r\n    value: '1954',\r\n  },\r\n  {\r\n    label: '1955',\r\n    value: '1955',\r\n  },\r\n  {\r\n    label: '1956',\r\n    value: '1956',\r\n  },\r\n  {\r\n    label: '1957',\r\n    value: '1957',\r\n  },\r\n  {\r\n    label: '1958',\r\n    value: '1958',\r\n  },\r\n  {\r\n    label: '1959',\r\n    value: '1959',\r\n  },\r\n  {\r\n    label: '1960',\r\n    value: '1960',\r\n  },\r\n\r\n  {\r\n    label: '1961',\r\n    value: '1961',\r\n  },\r\n  {\r\n    label: '1962',\r\n    value: '1962',\r\n  },\r\n  {\r\n    label: '1963',\r\n    value: '1963',\r\n  },\r\n  {\r\n    label: '1964',\r\n    value: '1964',\r\n  },\r\n  {\r\n    label: '1965',\r\n    value: '1965',\r\n  },\r\n  {\r\n    label: '1966',\r\n    value: '1966',\r\n  },\r\n  {\r\n    label: '1967',\r\n    value: '1967',\r\n  },\r\n  {\r\n    label: '1968',\r\n    value: '1968',\r\n  },\r\n  {\r\n    label: '1969',\r\n    value: '1969',\r\n  },\r\n  {\r\n    label: '1970',\r\n    value: '1970',\r\n  },\r\n\r\n  {\r\n    label: '1971',\r\n    value: '1971',\r\n  },\r\n  {\r\n    label: '1972',\r\n    value: '1972',\r\n  },\r\n  {\r\n    label: '1973',\r\n    value: '1973',\r\n  },\r\n  {\r\n    label: '1974',\r\n    value: '1974',\r\n  },\r\n  {\r\n    label: '1975',\r\n    value: '1975',\r\n  },\r\n  {\r\n    label: '1976',\r\n    value: '1976',\r\n  },\r\n  {\r\n    label: '1977',\r\n    value: '1977',\r\n  },\r\n  {\r\n    label: '1978',\r\n    value: '1978',\r\n  },\r\n  {\r\n    label: '1979',\r\n    value: '1979',\r\n  },\r\n  {\r\n    label: '1980',\r\n    value: '1980',\r\n  },\r\n\r\n  {\r\n    label: '1981',\r\n    value: '1981',\r\n  },\r\n  {\r\n    label: '1982',\r\n    value: '1982',\r\n  },\r\n  {\r\n    label: '1983',\r\n    value: '1983',\r\n  },\r\n  {\r\n    label: '1984',\r\n    value: '1984',\r\n  },\r\n  {\r\n    label: '1985',\r\n    value: '1985',\r\n  },\r\n  {\r\n    label: '1986',\r\n    value: '1986',\r\n  },\r\n  {\r\n    label: '1987',\r\n    value: '1987',\r\n  },\r\n  {\r\n    label: '1988',\r\n    value: '1988',\r\n  },\r\n  {\r\n    label: '1989',\r\n    value: '1989',\r\n  },\r\n  {\r\n    label: '1990',\r\n    value: '1990',\r\n  },\r\n\r\n  {\r\n    label: '1991',\r\n    value: '1991',\r\n  },\r\n  {\r\n    label: '1992',\r\n    value: '1992',\r\n  },\r\n  {\r\n    label: '1993',\r\n    value: '1993',\r\n  },\r\n  {\r\n    label: '1994',\r\n    value: '1994',\r\n  },\r\n  {\r\n    label: '1995',\r\n    value: '1995',\r\n  },\r\n  {\r\n    label: '1996',\r\n    value: '1996',\r\n  },\r\n  {\r\n    label: '1997',\r\n    value: '1997',\r\n  },\r\n  {\r\n    label: '1998',\r\n    value: '1998',\r\n  },\r\n  {\r\n    label: '1999',\r\n    value: '1999',\r\n  },\r\n  {\r\n    label: '2000',\r\n    value: '2000',\r\n  },\r\n\r\n  {\r\n    label: '2001',\r\n    value: '2001',\r\n  },\r\n  {\r\n    label: '2002',\r\n    value: '2002',\r\n  },\r\n  {\r\n    label: '2003',\r\n    value: '2003',\r\n  },\r\n  {\r\n    label: '2004',\r\n    value: '2004',\r\n  },\r\n  {\r\n    label: '2005',\r\n    value: '2005',\r\n  },\r\n  {\r\n    label: '2006',\r\n    value: '2006',\r\n  },\r\n  {\r\n    label: '2007',\r\n    value: '2007',\r\n  },\r\n  {\r\n    label: '2008',\r\n    value: '2008',\r\n  },\r\n  {\r\n    label: '2009',\r\n    value: '2009',\r\n  },\r\n  {\r\n    label: '2010',\r\n    value: '2010',\r\n  },\r\n\r\n  {\r\n    label: '2011',\r\n    value: '2011',\r\n  },\r\n  {\r\n    label: '2012',\r\n    value: '2012',\r\n  },\r\n  {\r\n    label: '2013',\r\n    value: '2013',\r\n  },\r\n  {\r\n    label: '2014',\r\n    value: '2014',\r\n  },\r\n  {\r\n    label: '2015',\r\n    value: '2015',\r\n  },\r\n  {\r\n    label: '2016',\r\n    value: '2016',\r\n  },\r\n  {\r\n    label: '2017',\r\n    value: '2017',\r\n  },\r\n  {\r\n    label: '2018',\r\n    value: '2018',\r\n  },\r\n  {\r\n    label: '2019',\r\n    value: '2019',\r\n  },\r\n  {\r\n    label: '2020',\r\n    value: '2020',\r\n  },\r\n\r\n  {\r\n    label: '2021',\r\n    value: '2021',\r\n  },\r\n  {\r\n    label: '2022',\r\n    value: '2022',\r\n  },\r\n  {\r\n    label: '2023',\r\n    value: '2023',\r\n  },\r\n  {\r\n    label: '2024',\r\n    value: '2024',\r\n  },\r\n  {\r\n    label: '2025',\r\n    value: '2025',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Genres = (props) => {\r\n  const { with_genres, allGenres, onChangeGenres } = props\r\n  return (\r\n    <>\r\n      <label className=\"filters-label genre-label\" htmlFor=\"with_genres\">\r\n        Жанры\r\n      </label>\r\n      <div className=\"genres\" id=\"with_genres\">\r\n        {allGenres.map((item) => {\r\n          return (\r\n            <div className=\"genres__item\" key={item.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={item.id}\r\n                checked={\r\n                  with_genres.indexOf(String(item.id)) === -1 ? false : true\r\n                }\r\n                className=\"genres__item__checkbox\"\r\n                name=\"with_genres\"\r\n                id={item.id}\r\n                onChange={onChangeGenres}\r\n              />\r\n              <label className=\"genres__item__label\" htmlFor={item.id}>\r\n                {item.name}\r\n              </label>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGenres.defaultProps = {\r\n  allGenres: [],\r\n}\r\n\r\nGenres.propTypes = {\r\n  allGenres: PropTypes.array.isRequired,\r\n  onChangeGenres: PropTypes.func.isRequired,\r\n  with_genres: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Genres\r\n","import React from 'react'\r\nimport Genres from './Genres'\r\nimport { api_key_movieDB_v3 } from '../../../utils/apies'\r\n\r\nexport default class GenresContainer extends React.PureComponent {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      allGenres: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const link = `https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key_movieDB_v3}&language=ru-RU`\r\n    return fetch(link)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ allGenres: data.genres })\r\n      })\r\n  }\r\n\r\n  onChangeGenres = (e) => {\r\n    const { name, value } = e.target\r\n    const { onChangeFilters, with_genres } = this.props\r\n\r\n    if (with_genres.indexOf(String(value)) === -1) {\r\n      onChangeFilters({\r\n        target: { name, value: [...with_genres, value] },\r\n      })\r\n    } else {\r\n      onChangeFilters({\r\n        target: { name, value: with_genres.filter((item) => item !== value) },\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Genres\r\n        with_genres={this.props.with_genres}\r\n        allGenres={this.state.allGenres}\r\n        onChangeGenres={this.onChangeGenres}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as filtersActions from '../redux/filters/filters.actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filters: state.filters,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filtersActions: bindActionCreators(filtersActions, dispatch),\r\n})\r\n\r\nexport const withFilters = (Component) =>\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(\r\n    class withFilters extends React.Component {\r\n      render() {\r\n        return <Component {...this.props} />\r\n      }\r\n    }\r\n  )\r\n","import React from 'react'\r\nimport SortBy from './SortBy.jsx'\r\nimport Pagination from './Pagination.jsx'\r\nimport PrimaryReleaseYear from './PrimaryReleaseYear.jsx'\r\nimport Genres from './Genres/GenresContainer.jsx'\r\nimport { withFilters } from '../../hoc/WithFilters.jsx'\r\n\r\nclass Filters extends React.Component {\r\n  render() {\r\n    const { filters, filtersActions } = this.props\r\n\r\n    return (\r\n      <>\r\n        <form className=\"mb-3\">\r\n          <div className=\"sort form-group\">\r\n            <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n              Сортировать\r\n            </label>\r\n            <SortBy\r\n              sort_by={filters.sort_by}\r\n              onChangeFilters={filtersActions.onChangeFilters}\r\n            />\r\n          </div>\r\n          <Pagination\r\n            total_pages={filters.total_pages}\r\n            onChangePage={filtersActions.onChangePage}\r\n            page={filters.page}\r\n          />\r\n          <div className=\"sort form-group mt-3\">\r\n            <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n              Фильтровать\r\n            </label>\r\n            <PrimaryReleaseYear\r\n              primary_release_year={filters.primary_release_year}\r\n              onChangeFilters={filtersActions.onChangeFilters}\r\n            />\r\n            <Genres\r\n              with_genres={filters.with_genres}\r\n              onChangeFilters={filtersActions.onChangeFilters}\r\n            />\r\n            <button\r\n              onClick={filtersActions.resetFilters}\r\n              className=\"btn btn-light col-12 mt-2\"\r\n              type=\"button\"\r\n              style={{ background: '#e2e6ea' }}\r\n            >\r\n              Сбросить фильтры\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFilters(Filters)\r\n","export const months = [\r\n  {\r\n    month: '01',\r\n    shortName: 'янв',\r\n    fullName: 'январь',\r\n  },\r\n  {\r\n    month: '02',\r\n    shortName: 'фев',\r\n    fullName: 'февраль',\r\n  },\r\n  {\r\n    month: '03',\r\n    shortName: 'мар',\r\n    fullName: 'март',\r\n  },\r\n  {\r\n    month: '04',\r\n    shortName: 'апр',\r\n    fullName: 'апрель',\r\n  },\r\n  {\r\n    month: '05',\r\n    shortName: 'май',\r\n    fullName: 'май',\r\n  },\r\n  {\r\n    month: '06',\r\n    shortName: 'июн',\r\n    fullName: 'июнь',\r\n  },\r\n  {\r\n    month: '07',\r\n    shortName: 'июл',\r\n    fullName: 'июль',\r\n  },\r\n  {\r\n    month: '08',\r\n    shortName: 'авг',\r\n    fullName: 'август',\r\n  },\r\n  {\r\n    month: '09',\r\n    shortName: 'сен',\r\n    fullName: 'сентябрь',\r\n  },\r\n  {\r\n    month: '10',\r\n    shortName: 'окт',\r\n    fullName: 'октябрь',\r\n  },\r\n  {\r\n    month: '11',\r\n    shortName: 'ноя',\r\n    fullName: 'ноябрь',\r\n  },\r\n  {\r\n    month: '12',\r\n    shortName: 'дек',\r\n    fullName: 'декабрь',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Star,\r\n  StarBorder,\r\n  Bookmark,\r\n  BookmarkBorder,\r\n  MoreHoriz,\r\n} from '@material-ui/icons'\r\nimport { api_img_url } from '../../utils/apies'\r\nimport { months } from '../../data/months'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass MovieItem extends React.PureComponent {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      showMovieModal: false,\r\n      favourite: false,\r\n    }\r\n  }\r\n\r\n  getMonthNameOnMonthNumber = () => {\r\n    const { movie } = this.props\r\n\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  toogleMovieModal = () => {\r\n    const { auth, authActions } = this.props\r\n    if (auth.session_id) {\r\n      this.setState((state) => ({\r\n        showMovieModal: !state.showMovieModal,\r\n      }))\r\n    } else {\r\n      authActions.toggleAuthFormModal(true)\r\n    }\r\n  }\r\n\r\n  updateFavouriteMovies = () => {\r\n    const { movie, auth, moviesActions } = this.props\r\n\r\n    moviesActions.updateFavouriteMovies({\r\n      account_id: auth.account_id,\r\n      session_id: auth.session_id,\r\n      media_id: movie.id,\r\n    })\r\n\r\n    this.toogleMovieModal()\r\n  }\r\n\r\n  updateWatchlist = () => {\r\n    const { movie, auth, moviesActions } = this.props\r\n\r\n    moviesActions.updateWatchlist({\r\n      account_id: auth.account_id,\r\n      session_id: auth.session_id,\r\n      media_id: movie.id,\r\n    })\r\n\r\n    this.toogleMovieModal()\r\n  }\r\n\r\n  forEachFavouriteMoviesOrWatchlist = (moviesArr) => {\r\n    const { movie } = this.props\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  render() {\r\n    const { movie, movies } = this.props\r\n\r\n    const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n      this.getMonthNameOnMonthNumber()[0].shortName\r\n    } ${movie.release_date.substr(0, 4)}`\r\n\r\n    return (\r\n      <div className=\"movie-card\">\r\n        <Link to={`/kinopoisk/movie/${movie.id}/media/`}>\r\n          <img\r\n            className=\"movie-card__img\"\r\n            src={\r\n              movie.poster_path\r\n                ? `${api_img_url}${movie.poster_path}`\r\n                : `/kinopoisk/images/not-foundPoster.png`\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n        <div className=\"movie-card__desc\">\r\n          <p className=\"movie-card__desc__vote-average\">\r\n            {String(movie.vote_average).length === 1\r\n              ? `${movie.vote_average}.0`\r\n              : movie.vote_average}\r\n          </p>\r\n          <p className=\"movie-card__desc__title\">\r\n            <Link to={`/kinopoisk/movie/${movie.id}`}>{movie.title}</Link>\r\n          </p>\r\n          <p className=\"movie-card__desc__release-date\">{releaseDate}</p>\r\n        </div>\r\n        <div className=\"movie-settings\">\r\n          <div className=\"movie-settings__wrapper\">\r\n            <div className=\"more-horiz\">\r\n              <MoreHoriz\r\n                className=\"more-horiz__icon\"\r\n                onClick={this.toogleMovieModal}\r\n              />\r\n            </div>\r\n            {this.state.showMovieModal && (\r\n              <div className=\"settings-menu\">\r\n                <div\r\n                  className=\"favourite-movie settings-menuItem\"\r\n                  onClick={this.updateFavouriteMovies}\r\n                >\r\n                  {this.forEachFavouriteMoviesOrWatchlist(\r\n                    movies.favouriteMovies\r\n                  ) ? (\r\n                    <Star />\r\n                  ) : (\r\n                    <StarBorder />\r\n                  )}\r\n                  <span className=\"settings-title\">Избранное</span>\r\n                </div>\r\n                <div\r\n                  className=\"willWatch-movie settings-menuItem\"\r\n                  onClick={this.updateWatchlist}\r\n                >\r\n                  {this.forEachFavouriteMoviesOrWatchlist(movies.watchlist) ? (\r\n                    <Bookmark />\r\n                  ) : (\r\n                    <BookmarkBorder />\r\n                  )}\r\n                  <span className=\"settings-title\">Посмотреть</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(MovieItem)\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem.jsx'\r\nimport MoviesHOC from './MoviesHOC.jsx'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MoviesList extends React.PureComponent {\r\n  static defaultProps = {\r\n    movies: [],\r\n  }\r\n\r\n  static propTypes = {\r\n    movies: PropTypes.array.isRequired,\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.movies.map((movie) => {\r\n          return (\r\n            <MovieItem\r\n              movie={movie}\r\n              favouriteMovies={this.props.favouriteMovies}\r\n              watchList={this.props.watchList}\r\n              key={movie.id}\r\n            />\r\n          )\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MoviesHOC(MoviesList)\r\n","import React from 'react'\r\nimport CallApi from '../../utils/apies'\r\nimport _ from 'lodash'\r\n\r\nexport default (Component) =>\r\n  class MoviesHOC extends React.PureComponent {\r\n    constructor() {\r\n      super()\r\n\r\n      this.state = {\r\n        movies: [],\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { filters, page } = this.props\r\n      this.getMovies(filters, page)\r\n    }\r\n\r\n    componentDidUpdate(p) {\r\n      const { onChangePage, filters, page } = this.props\r\n\r\n      if (\r\n        !_.isEqual(p.filters.sort_by, filters.sort_by) ||\r\n        !_.isEqual(\r\n          p.filters.primary_release_year,\r\n          filters.primary_release_year\r\n        ) ||\r\n        !_.isEqual(p.filters.with_genres, filters.with_genres)\r\n      ) {\r\n        onChangePage(1)\r\n        this.getMovies(filters)\r\n      }\r\n\r\n      if (p.page !== page) {\r\n        this.getMovies(filters, page)\r\n      }\r\n    }\r\n\r\n    getSettingsMovies = (nameState, url) => {\r\n      const { session_id, account_id, page } = this.props\r\n      const apiParams = {\r\n        language: 'ru-RU',\r\n        session_id,\r\n        page,\r\n      }\r\n\r\n      return CallApi.get(`/account/${account_id}${url}`, {\r\n        params: apiParams,\r\n      }).then((data) => {\r\n        this.setState({\r\n          [nameState]: data.results,\r\n        })\r\n      })\r\n    }\r\n\r\n    getMovies = (filters, page = 1) => {\r\n      const { sort_by, primary_release_year, with_genres } = filters\r\n      const { onChangeTotalPages } = this.props\r\n\r\n      const apiParams = {\r\n        language: 'ru-RU',\r\n        sort_by,\r\n        page,\r\n        primary_release_year,\r\n        with_genres: with_genres.join(','),\r\n      }\r\n\r\n      return CallApi.get('/discover/movie', { params: apiParams }).then(\r\n        (data) => {\r\n          onChangeTotalPages(data.total_pages)\r\n          this.setState({ movies: data.results })\r\n        }\r\n      )\r\n    }\r\n\r\n    render() {\r\n      const { movies, favouriteMovies, watchList } = this.state\r\n      return (\r\n        <Component\r\n          account_id={this.props.account_id}\r\n          session_id={this.props.session_id}\r\n          movies={movies}\r\n          favouriteMovies={favouriteMovies}\r\n          watchList={watchList}\r\n        />\r\n      )\r\n    }\r\n  }\r\n","import React from 'react'\r\nimport Filters from '../../Filters/Filters.jsx'\r\nimport MoviesList from '../../Movies/MoviesList.jsx'\r\nimport { withFilters } from '../../../hoc/WithFilters.jsx'\r\n\r\nclass MoviesPage extends React.Component {\r\n  render() {\r\n    const { filters, filtersActions } = this.props\r\n    return (\r\n      <div className=\"main container\">\r\n        <div className=\"row\">\r\n          <div className=\"filters col-3\">\r\n            <Filters />\r\n          </div>\r\n          <div className=\"movies col-9\">\r\n            <MoviesList\r\n              filters={filters}\r\n              page={filters.page}\r\n              onChangePage={filtersActions.onChangePage}\r\n              onChangeTotalPages={filtersActions.onChangeTotalPages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFilters(MoviesPage)\r\n","import React from 'react'\r\nimport { Star, StarBorder, Bookmark, BookmarkBorder } from '@material-ui/icons'\r\nimport { api_img_url } from '../../../utils/apies'\r\n\r\nexport const MovieHeader = (props) => {\r\n  const forEachGenresCompaniesCountries = (arr = []) => {\r\n    let resultArr = []\r\n\r\n    arr.forEach((item) => {\r\n      resultArr.push(item.name)\r\n    })\r\n\r\n    return resultArr\r\n  }\r\n\r\n  const forEachFavouriteMoviesOrWatchlist = (moviesArr = [], movie = {}) => {\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  const { movie, movies, moviesActions, auth, authActions } = props\r\n  return (\r\n    <div className=\"movie-header\">\r\n      <div className=\"movie-header__custom-bg text-right\">\r\n        <img\r\n          src={\r\n            movie.backdrop_path\r\n              ? `https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${\r\n                  movie.belongs_to_collection\r\n                    ? movie.belongs_to_collection.backdrop_path\r\n                    : movie.backdrop_path\r\n                }`\r\n              : '/kinopoisk/images/not-found-backdrop.jpg'\r\n          }\r\n          alt=\"\"\r\n          height=\"512\"\r\n          className=\"movie-header__bg-img\"\r\n        />\r\n      </div>\r\n      <div className=\"movie-header__single-column\">\r\n        <div className=\"movie-header__content-wrapper h-100\">\r\n          <div className=\"container h-100\">\r\n            <div className=\"row h-100\">\r\n              <div className=\"col-4 pr-0 d-flex align-items-center h-100\">\r\n                <img\r\n                  src={\r\n                    movie.poster_path\r\n                      ? `${api_img_url}${movie.poster_path}`\r\n                      : `/kinopoisk/images/not-foundPoster.png`\r\n                  }\r\n                  width=\"290\"\r\n                  height=\"435\"\r\n                  alt=\"\"\r\n                  className=\"movie-header__poster-img rounded-lg\"\r\n                />\r\n              </div>\r\n              <div className=\"col-8 pl-0 text-left d-flex justify-content-center flex-column h-100\">\r\n                <div className=\"movie-header__description\">\r\n                  <h2 className=\"movie-header__title mb-0\">\r\n                    {movie.title} ( {movie.original_title} )\r\n                  </h2>\r\n                  <p className=\"movie-header__tagline mb-0\">{movie.tagline}</p>\r\n                  <div className=\"d-flex align-items-center mt-3 mb-3\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"movie-header__rate d-flex justify-content-center align-items-center rounded-circle\">\r\n                        {String(movie.vote_average).length === 1\r\n                          ? `${movie.vote_average}.0`\r\n                          : movie.vote_average}\r\n                      </div>\r\n                      <p className=\"mb-0 pl-3\" style={{ lineHeight: '18px' }}>\r\n                        Пользовательский <br /> счёт\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div\r\n                        className=\"ml-4 movie-header__favourite cursor-pointer d-flex justify-content-center align-items-center rounded-circle\"\r\n                        onClick={() => {\r\n                          if (auth.user) {\r\n                            moviesActions.updateFavouriteMovies({\r\n                              account_id: auth.account_id,\r\n                              session_id: auth.session_id,\r\n                              media_id: movie.id,\r\n                            })\r\n                          } else {\r\n                            authActions.toggleAuthFormModal(true)\r\n                          }\r\n                        }}\r\n                      >\r\n                        {forEachFavouriteMoviesOrWatchlist(\r\n                          movies.favouriteMovies,\r\n                          movie\r\n                        ) ? (\r\n                          <Star />\r\n                        ) : (\r\n                          <StarBorder />\r\n                        )}\r\n                      </div>\r\n                      <div\r\n                        className=\"ml-2 movie-header__watchlist cursor-pointer d-flex justify-content-center align-items-center rounded-circle\"\r\n                        onClick={() => {\r\n                          if (auth.user) {\r\n                            moviesActions.updateWatchlist({\r\n                              account_id: auth.account_id,\r\n                              session_id: auth.session_id,\r\n                              media_id: movie.id,\r\n                            })\r\n                          } else {\r\n                            authActions.toggleAuthFormModal(true)\r\n                          }\r\n                        }}\r\n                      >\r\n                        {forEachFavouriteMoviesOrWatchlist(\r\n                          movies.watchlist,\r\n                          movie\r\n                        ) ? (\r\n                          <Bookmark />\r\n                        ) : (\r\n                          <BookmarkBorder />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"mb-1\">\r\n                    <span className=\"font-weight-bold\">Статус</span> -{' '}\r\n                    {movie.status}\r\n                  </p>\r\n                  <p className=\"mb-1\">\r\n                    <span className=\"font-weight-bold\">Дата выхода</span> -{' '}\r\n                    {movie.release_date}\r\n                  </p>\r\n                  <p className=\"mb-1\">\r\n                    <span className=\"font-weight-bold\">Жанры</span> -{' '}\r\n                    {forEachGenresCompaniesCountries(movie.genres).join(', ')}\r\n                  </p>\r\n                  <p className=\"mb-1\">\r\n                    <span className=\"font-weight-bold\">Язык оригинала</span> -{' '}\r\n                    {movie.original_language}\r\n                  </p>\r\n                  <p className=\"mb-1\">\r\n                    <span className=\"font-weight-bold\">Компания</span> -{' '}\r\n                    {forEachGenresCompaniesCountries(\r\n                      movie.production_companies\r\n                    ).join(', ')}\r\n                  </p>\r\n                  <p className=\"mb-3\">\r\n                    <span className=\"font-weight-bold\">Страна</span> -{' '}\r\n                    {forEachGenresCompaniesCountries(\r\n                      movie.production_countries\r\n                    ).join(', ')}\r\n                  </p>\r\n                  <h4 className=\"mb-1\">Обзор</h4>\r\n                  <p className=\"text-max-5-line mb-0\">{movie.overview}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport CallApi, { api_img_url } from '../../../../utils/apies'\r\n\r\nexport default class MovieMedia extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      videos: [],\r\n      images: [],\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { movie_id } = this.props\r\n\r\n    CallApi.get(`/movie/${movie_id}/videos`, {\r\n      params: {\r\n        language: 'ru-RU',\r\n        append_to_response: 'videos',\r\n      },\r\n    }).then((data) => {\r\n      if (data.results.length > 0) {\r\n        this.setState(() => ({ videos: data.results }))\r\n      } else {\r\n        CallApi.get(`/movie/${movie_id}/videos`, {\r\n          params: {\r\n            language: 'en-US',\r\n            append_to_response: 'videos',\r\n          },\r\n        }).then((data) => {\r\n          this.setState(() => ({ videos: data.results }))\r\n        })\r\n      }\r\n    })\r\n\r\n    CallApi.get(`/movie/${movie_id}/images`, {\r\n      params: {\r\n        include_image_language: 'ru,en',\r\n      },\r\n    }).then((data) => {\r\n      this.setState(() => ({ images: data.posters }))\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { videos, images } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"videos mt-3 mb-3\">\r\n          <div className=\"horizontal-scroll d-flex \">\r\n            {videos.map((item) => {\r\n              return (\r\n                <div key={item.id} className=\"videos__item mr-2\">\r\n                  <h5 className=\"mb-2 text-max-1-line\">{item.name}</h5>\r\n                  <iframe\r\n                    title=\"JIU JITSU | Official Trailer [HD] | Paramount Movies\"\r\n                    width=\"550\"\r\n                    height=\"315\"\r\n                    src={`https://www.youtube.com/embed/${item.key}`}\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"images mb-4\">\r\n          <h3 className=\"mb-2 mt-2\">Галерея</h3>\r\n          <div className=\"d-flex horizontal-scroll\">\r\n            {images.map((item) => {\r\n              return (\r\n                <div className=\"images__item mr-2\" key={item.file_path}>\r\n                  <img\r\n                    src={`${api_img_url}${item.file_path}`}\r\n                    width=\"210\"\r\n                    height=\"300\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport CallApi, { api_img_url } from '../../../../utils/apies'\r\n\r\nexport default class MovieActors extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      actors: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { movie_id } = this.props\r\n\r\n    CallApi.get(`/movie/${movie_id}/credits`, {\r\n      params: {\r\n        language: 'ru',\r\n      },\r\n    }).then((data) => {\r\n      this.setState(() => ({ actors: data.cast }))\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"actors mt-2 mb-4 d-flex justify-content-between horizontal-scroll\">\r\n        {this.state.actors.map((actor) => {\r\n          return (\r\n            <div className=\"actors__item mr-2\" key={actor.id}>\r\n              <img\r\n                src={\r\n                  actor.profile_path\r\n                    ? `${api_img_url}${actor.profile_path}`\r\n                    : '/kinopoisk/images/not-foundPoster.png'\r\n                }\r\n                width=\"240\"\r\n                alt=\"\"\r\n              />\r\n              <div className=\"actors__description d-flex align-items-center justify-content-center flex-column\">\r\n                <h5 className=\"mb-1\">{actor.name}</h5>\r\n                <p className=\"mb-0 text-max-1-line text-center pl-1 pr-1\">\r\n                  Роль - {actor.character}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { TabContent, Nav, NavItem } from 'reactstrap'\r\nimport { Route, Switch, NavLink } from 'react-router-dom'\r\nimport CallApi from '../../../utils/apies'\r\nimport { MovieHeader } from './MovieHeader.jsx'\r\nimport { withAuth } from '../../../hoc/WithAuth.jsx'\r\nimport MovieMedia from './Tabs/MovieMedia.jsx'\r\nimport MovieActors from './Tabs/MovieActors.jsx'\r\n\r\nclass MoviePage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      movie: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    CallApi.get(`/movie/${this.props.match.params.id}`, {\r\n      params: {\r\n        language: 'ru-RU',\r\n      },\r\n    }).then((data) => this.setState(() => ({ movie: data })))\r\n  }\r\n\r\n  render() {\r\n    const { movie, activeTab } = this.state\r\n    const { match } = this.props\r\n\r\n    return (\r\n      <div className=\"movie-page\">\r\n        <MovieHeader {...this.props} movie={movie} />\r\n        <div className=\"movie-tabs w-100\">\r\n          <div className=\"container\">\r\n            <Nav tabs>\r\n              <NavItem className=\"cursor-pointer\">\r\n                <p className=\"mb-0 mr-1 mt-1 movie-tabs__item\">\r\n                  <NavLink\r\n                    className=\"p-2 pl-3 pr-3 movie-tabs__link-tab d-block\"\r\n                    to={`${match.url}/media/`}\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    Медиа\r\n                  </NavLink>\r\n                </p>\r\n              </NavItem>\r\n              <NavItem className=\"cursor-pointer\">\r\n                <p className=\"mb-0 mr-1 mt-1 movie-tabs__item\">\r\n                  <NavLink\r\n                    className=\"p-2 pl-3 pr-3 movie-tabs__link-tab d-block\"\r\n                    to={`${match.url}/actors/`}\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    Актеры\r\n                  </NavLink>\r\n                </p>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <Switch>\r\n                <Route\r\n                  path={`${match.url}/media/`}\r\n                  render={() => <MovieMedia movie_id={match.params.id} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/actors/`}\r\n                  render={() => <MovieActors movie_id={match.params.id} />}\r\n                />\r\n              </Switch>\r\n            </TabContent>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(MoviePage)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Star, StarBorder, Bookmark, BookmarkBorder } from '@material-ui/icons'\r\nimport { months } from '../../../../data/months'\r\nimport { withAuth } from '../../../../hoc/WithAuth.jsx'\r\n\r\nconst FavouriteMoviesTab = (props) => {\r\n  const getMonthNameOnMonthNumber = (movie) => {\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  const forEachFavouriteMoviesOrWatchlist = (moviesArr, movie) => {\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  const { auth, moviesActions, movies } = props\r\n  return (\r\n    <div className=\"favourite-movies-tab\">\r\n      <div className=\"favourite-movies\">\r\n        {movies.favouriteMovies.map((movie) => {\r\n          const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n            getMonthNameOnMonthNumber(movie)[0].shortName\r\n          } ${movie.release_date.substr(0, 4)}`\r\n          return (\r\n            <div className=\"favourite-movies__item\" key={movie.id}>\r\n              <div className=\"poster-img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt=\"\"\r\n                  className=\"poster-img__image\"\r\n                />\r\n              </div>\r\n              <div className=\"description\">\r\n                <div className=\"description__top-block\">\r\n                  <div className=\"rate\">\r\n                    {String(movie.vote_average).length === 1\r\n                      ? `${movie.vote_average}.0`\r\n                      : movie.vote_average}\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <p className=\"movie-name\">\r\n                      <Link to={`/kinopoisk/movie/${movie.id}/media/`}>\r\n                        {movie.title}\r\n                      </Link>\r\n                    </p>\r\n                    <p className=\"release-date\">{releaseDate}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__middle-block\">\r\n                  <div className=\"movie-overview\">\r\n                    <p className=\"text\">{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__bottom-block\">\r\n                  <div\r\n                    className=\"favourite cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateFavouriteMovies({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.favouriteMovies,\r\n                        movie\r\n                      ) ? (\r\n                        <Star />\r\n                      ) : (\r\n                        <StarBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Избранное</span>\r\n                  </div>\r\n                  <div\r\n                    className=\"watchlist cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateWatchlist({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.watchlist,\r\n                        movie\r\n                      ) ? (\r\n                        <Bookmark />\r\n                      ) : (\r\n                        <BookmarkBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Посмотреть</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(FavouriteMoviesTab)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Star, StarBorder, Bookmark, BookmarkBorder } from '@material-ui/icons'\r\nimport { months } from '../../../../data/months'\r\nimport { withAuth } from '../../../../hoc/WithAuth.jsx'\r\n\r\nconst WatchlistTab = (props) => {\r\n  const getMonthNameOnMonthNumber = (movie) => {\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  const forEachFavouriteMoviesOrWatchlist = (moviesArr, movie) => {\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  const { auth, moviesActions, movies } = props\r\n  return (\r\n    <div className=\"favourite-movies-tab\">\r\n      <div className=\"favourite-movies\">\r\n        {movies.watchlist.map((movie) => {\r\n          const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n            getMonthNameOnMonthNumber(movie)[0].shortName\r\n          } ${movie.release_date.substr(0, 4)}`\r\n          return (\r\n            <div className=\"favourite-movies__item\" key={movie.id}>\r\n              <div className=\"poster-img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt=\"\"\r\n                  className=\"poster-img__image\"\r\n                />\r\n              </div>\r\n              <div className=\"description\">\r\n                <div className=\"description__top-block\">\r\n                  <div className=\"rate\">\r\n                    {String(movie.vote_average).length === 1\r\n                      ? `${movie.vote_average}.0`\r\n                      : movie.vote_average}\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <p className=\"movie-name\">\r\n                      <Link to={`/kinopoisk/movie/${movie.id}/media/`}>\r\n                        {movie.title}\r\n                      </Link>\r\n                    </p>\r\n                    <p className=\"release-date\">{releaseDate}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__middle-block\">\r\n                  <div className=\"movie-overview\">\r\n                    <p className=\"text\">{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__bottom-block\">\r\n                  <div\r\n                    className=\"favourite cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateFavouriteMovies({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.favouriteMovies,\r\n                        movie\r\n                      ) ? (\r\n                        <Star />\r\n                      ) : (\r\n                        <StarBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Избранное</span>\r\n                  </div>\r\n                  <div\r\n                    className=\"watchlist cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateWatchlist({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.watchlist,\r\n                        movie\r\n                      ) ? (\r\n                        <Bookmark />\r\n                      ) : (\r\n                        <BookmarkBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Посмотреть</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(WatchlistTab)\r\n","import React from 'react'\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap'\r\nimport classnames from 'classnames'\r\nimport { withAuth } from '../../../hoc/WithAuth.jsx'\r\nimport FavouriteMovies from './Tabs/FavouriteMovies.jsx'\r\nimport Watchlist from './Tabs/Watchlist.jsx'\r\n\r\nclass UserPage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      activeTab: '1',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { authActions } = this.props\r\n    authActions.toggleUserModal(false)\r\n  }\r\n\r\n  render() {\r\n    const { auth, movies } = this.props\r\n\r\n    const toggle = (tab) => {\r\n      if (this.state.activeTab !== tab)\r\n        this.setState(() => ({ activeTab: tab }))\r\n    }\r\n\r\n    const { activeTab } = this.state\r\n\r\n    return (\r\n      <div className=\"user-page\">\r\n        <div className=\"user-page__header\">\r\n          <div className=\"bg-image\">\r\n            <img\r\n              className=\"image\"\r\n              src=\"/kinopoisk/images/user-page.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"inner-content\">\r\n            <div className=\"content container\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${auth.user.avatar.tmdb.avatar_path}`}\r\n                alt=\"\"\r\n                className=\"user-img\"\r\n              />\r\n              <div className=\"user-data\">\r\n                <h2 className=\"user-data__name\">{auth.user.name}</h2>\r\n                <p className=\"user-data__nickname\">{auth.user.username}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <Nav tabs>\r\n            <NavItem className=\"cursor-pointer\">\r\n              <NavLink\r\n                className={classnames({ active: activeTab === '1' })}\r\n                onClick={() => {\r\n                  toggle('1')\r\n                }}\r\n              >\r\n                Избранные\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"cursor-pointer\">\r\n              <NavLink\r\n                className={classnames({ active: activeTab === '2' })}\r\n                onClick={() => {\r\n                  toggle('2')\r\n                }}\r\n              >\r\n                Список отслеживания\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {movies.favouriteMovies.length > 0 ? (\r\n                    <FavouriteMovies />\r\n                  ) : (\r\n                    <p className=\"mt-4\">У вас нет избранных фильмов...</p>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {movies.watchlist.length > 0 ? (\r\n                    <Watchlist />\r\n                  ) : (\r\n                    <p className=\"mt-4\">\r\n                      У вас нет выбранных фильмов для просмотра...\r\n                    </p>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(UserPage)\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.jsx'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport MoviesPage from './components/pages/MoviesPage/MoviesPage.jsx'\r\nimport MoviePage from './components/pages/MoviePage/MoviePage.jsx'\r\nimport UserPage from './components/pages/UserPage/UserPage.jsx'\r\nimport { withAuth } from './hoc/WithAuth.jsx'\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    const { auth, authActions, moviesActions } = this.props\r\n    if (auth.session_id) {\r\n      authActions.fetchAuth(auth.session_id)\r\n      moviesActions.fetchFavouriteMovies({\r\n        session_id: auth.session_id,\r\n        account_id: auth.account_id,\r\n      })\r\n      moviesActions.fetchWatchlist({\r\n        session_id: auth.session_id,\r\n        account_id: auth.account_id,\r\n      })\r\n    } else {\r\n      authActions.toggleAuthFormModal(true)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"header\">\r\n          <Header />\r\n        </div>\r\n        <Route exact path=\"/kinopoisk/\" component={MoviesPage} />\r\n        <Route path=\"/kinopoisk/profile/:id\" component={UserPage} />\r\n        <Route path=\"/kinopoisk/movie/:id\" component={MoviePage} />\r\n        <div className=\"footer\"></div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Cookies from 'universal-cookie'\r\n\r\nexport const cookies = new Cookies()\r\n","import * as types from './auth.types'\r\nimport { cookies } from '../../utils/cookies'\r\n\r\nconst initialState = {\r\n  user: null,\r\n  session_id: cookies.get('session_id'),\r\n  account_id: cookies.get('account_id'),\r\n  isAuth: false,\r\n  showUserModal: false,\r\n  showAuthFormModal: false,\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_AUTH:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        session_id: action.payload.session_id,\r\n        account_id: action.payload.user.id,\r\n        isAuth: true,\r\n        showUserModal: false,\r\n        showAuthFormModal: false,\r\n      }\r\n    case types.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        session_id: null,\r\n        account_id: null,\r\n        isAuth: false,\r\n        showUserModal: false,\r\n        showAuthFormModal: false,\r\n      }\r\n    case types.TOGGLE_USER_MODAL:\r\n      return {\r\n        ...state,\r\n        showUserModal: action.payload,\r\n      }\r\n    case types.TOGGLE_AUTH_FORM_MODAL:\r\n      return {\r\n        ...state,\r\n        showAuthFormModal: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from './movies.types'\r\n\r\nconst initialState = {\r\n  favouriteMovies: [],\r\n  watchlist: [],\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.FETCH_SUCCESS_FAVOURITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: action.payload.results,\r\n      }\r\n    case types.FETCH_SUCCESS_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        watchlist: action.payload.results,\r\n      }\r\n    case types.UPDATE_SUCCESS_FAVOURITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: action.payload.results,\r\n      }\r\n    case types.UPDATE_SUCCESS_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        watchlist: action.payload.results,\r\n      }\r\n    case types.CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: [],\r\n        watchlist: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from './filters.types'\r\n\r\nconst initialState = {\r\n  sort_by: 'popularity.desc',\r\n  primary_release_year: new Date().getFullYear(),\r\n  with_genres: [],\r\n  page: 1,\r\n  total_pages: 500,\r\n}\r\n\r\nexport default function filtersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.ONCHANGE_FILTERS:\r\n      return {\r\n        ...state,\r\n        [action.payload.name]: action.payload.value,\r\n      }\r\n    case types.ONCHANGE_PAGE:\r\n      return {\r\n        ...state,\r\n        page: action.payload,\r\n      }\r\n    case types.ONCHANGE_TOTAL_PAGES:\r\n      return {\r\n        ...state,\r\n        total_pages: action.payload,\r\n      }\r\n    case types.RESET_FILTERS:\r\n      return (state = initialState)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport authReducer from '../redux/auth/auth.reducer'\r\nimport moviesReducer from '../redux/movies/movies.reducer'\r\nimport filtersReducer from '../redux/filters/filters.reducer'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  movies: moviesReducer,\r\n  filters: filtersReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { UPDATE_AUTH, LOGOUT } from './auth/auth.types'\r\nimport { cookies } from '../utils/cookies'\r\nimport rootReducer from '../redux/rootReducer'\r\n\r\nconst updateCookies = () => (next) => (action) => {\r\n  if (action.type === UPDATE_AUTH) {\r\n    cookies.set('session_id', action.payload.session_id, {\r\n      path: '/kinopoisk/',\r\n      maxAge: 2592000,\r\n    })\r\n  }\r\n  if (action.type === LOGOUT) {\r\n    cookies.remove('session_id', {\r\n      path: '/kinopoisk/',\r\n    })\r\n  }\r\n  return next(action)\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk, updateCookies))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport WebFont from 'webfontloader'\r\nimport store from './redux/store'\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Open Sans'],\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('kinopoisk')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}