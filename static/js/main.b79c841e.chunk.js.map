{"version":3,"sources":["utils/apies.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","redux/movies/movies.actions.js","redux/movies/movies.types.js","hoc/WithAuth.jsx","components/Header/Authentication/AuthenticationForm.jsx","components/Header/Authentication/Authentication.jsx","components/UI Components/UIDropdown.jsx","components/Header/User.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Pagination.jsx","components/Filters/PrimaryReleaseYear.jsx","data/primary_release_year.js","components/Filters/Genres/Genres.jsx","components/Filters/Genres/GenresContainer.jsx","components/Filters/Filters.jsx","data/months.js","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MoviePage.jsx","App.jsx","serviceWorker.js","utils/cookies.js","redux/auth/auth.reducer.js","redux/movies/movies.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["api_url","api_key_movieDB_v3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","React","Component","fetchAuth","session_id","dispatch","type","get","user","updateAuth","payload","onLogOut","toggleUserModal","movies","toggleAuthFormModal","show","fetchFavouriteMovies","account_id","favouriteMovies","fetchWatchlist","watchlist","clearFavouriteMoviesAndWatchList","updateFavouriteMovies","media_id","getState","favorite","i","length","Number","id","post","media_type","updateWatchlist","mapStateToProps","state","auth","mapDispatchToProps","authActions","bindActionCreators","moviesActions","withAuth","connect","this","props","cookies","Cookies","getUser","setState","submitting","data","username","password","request_token","set","path","maxAge","prevState","errors","base","status_message","validateFields","repeatPassword","onChange","e","target","name","value","handleBlur","Object","keys","onSubmit","preventDefault","getClassForInpur","errorName","classNames","invalid","className","htmlFor","placeholder","onBlur","disabled","Authentication","toggleModal","showAuthFormModal","onClick","Modal","isOpen","toggle","ModalBody","UIDropdown","toggleShow","showUserModal","render","style","position","children","defaultProps","top","right","bottom","left","handleLogOut","delete","src","avatar","tmdb","avatar_path","alt","SortBy","sort_by","onChangeFilters","sortByOptions","map","option","key","label","PureComponent","onChangePage","page","total_pages","bind","PrimaryReleaseYear","primary_release_year_options","primary_release_year","Genres","with_genres","allGenres","onChangeGenres","item","checked","indexOf","String","GenresContainer","filter","link","genres","Filters","filters","resetFilters","background","months","month","shortName","fullName","getMonthNameOnMonthNumber","movie","release_date","substr","toogleMovieModal","showMovieModal","forEachFavouriteMoviesOrWatchlist","moviesArr","starMovie","forEach","favourite","releaseDate","to","poster_path","vote_average","title","MoreHoriz","Star","StarBorder","Bookmark","BookmarkBorder","MoviesList","watchList","MoviesHOC","getSettingsMovies","nameState","apiParams","language","results","getMovies","onChangeTotalPages","join","firstRender","p","_","isEqual","MoviesPage","s","initialState","Date","getFullYear","MoviePage","match","exact","component","Boolean","window","location","hostname","isAuth","combineReducers","action","remove","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","WebFont","load","google","families","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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D,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAGT,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAGT,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAGT,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAGT,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET,CACEiD,MAAO,OACPjD,MAAO,QAET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","file":"static/js/main.b79c841e.chunk.js","sourcesContent":["import React from 'react'\r\nimport queryString from 'query-string'\r\n\r\nexport const api_url = 'https://api.themoviedb.org/3'\r\n\r\nexport const api_img_url = 'https://image.tmdb.org/t/p/w500'\r\n\r\nexport const api_key_movieDB_v3 = '2bf9f43ff01f800a4b2838b95fcce99e'\r\n\r\nexport const api_key_movieDB_v4 =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYmY5ZjQzZmYwMWY4MDBhNGIyODM4Yjk1ZmNjZTk5ZSIsInN1YiI6IjVjZTkyOWU3YzNhMzY4MWM0ZTFlODRkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fffZy6W_ZCD20rApqm9asph-hWYo_w8zjvPNLyZf-wY'\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n      .then((response) => {\r\n        if (response.status < 400) {\r\n          return resolve(response.json())\r\n        } else {\r\n          throw response\r\n        }\r\n      })\r\n      .catch((response) => response.json().then((error) => reject(error)))\r\n  })\r\n}\r\n\r\nexport default class CallApi extends React.Component {\r\n  static get(url, options = {}) {\r\n    const { params } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n  }\r\n  static post(url, options = {}) {\r\n    const { params, body } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    )\r\n  }\r\n  static delete(url, options = {}) {\r\n    const { params, body } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    )\r\n  }\r\n}\r\n","import CallApi from '../../utils/apies'\r\nimport * as types from './auth.types'\r\n\r\nexport const fetchAuth = (session_id) => (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_AUTH,\r\n  })\r\n  CallApi.get('/account', { params: { session_id } })\r\n    .then((user) => {\r\n      dispatch(updateAuth({ user, session_id }))\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_AUTH,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateAuth = ({ user, session_id }) => ({\r\n  type: types.UPDATE_AUTH,\r\n  payload: {\r\n    user,\r\n    session_id,\r\n  },\r\n})\r\n\r\nexport const onLogOut = () => {\r\n  return {\r\n    type: types.LOGOUT,\r\n  }\r\n}\r\n\r\nexport const toggleUserModal = (movies) => {\r\n  return {\r\n    type: types.TOGGLE_USER_MODAL,\r\n    payload: movies,\r\n  }\r\n}\r\n\r\nexport const toggleAuthFormModal = (show) => {\r\n  return {\r\n    type: types.TOGGLE_AUTH_FORM_MODAL,\r\n    payload: show,\r\n  }\r\n}\r\n","export const UPDATE_AUTH = 'UPDATE_AUTH'\r\nexport const FETCH_REQUEST_AUTH = 'FETCH_REQUEST_AUTH'\r\nexport const FETCH_ERROR_AUTH = 'FETCH_ERROR_AUTH'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const TOGGLE_USER_MODAL = 'TOGGLE_USER_MODAL'\r\nexport const TOGGLE_AUTH_FORM_MODAL = 'TOGGLE_AUTH_FORM_MODAL'\r\n\r\n","import CallApi from '../../utils/apies'\r\nimport * as types from './movies.types'\r\n\r\nexport const fetchFavouriteMovies = ({ session_id, account_id }) => (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_FAVOURITE_MOVIES,\r\n  })\r\n  CallApi.get(`/account/${account_id}/favorite/movies`, {\r\n    params: { session_id },\r\n  })\r\n    .then((favouriteMovies) => {\r\n      dispatch({\r\n        type: types.FETCH_SUCCESS_FAVOURITE_MOVIES,\r\n        payload: favouriteMovies,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_FAVOURITE_MOVIES,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const fetchWatchlist = ({ session_id, account_id }) => (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_WATCHLIST,\r\n  })\r\n  CallApi.get(`/account/${account_id}/watchlist/movies`, {\r\n    params: { session_id },\r\n  })\r\n    .then((watchlist) => {\r\n      dispatch({\r\n        type: types.FETCH_SUCCESS_WATCHLIST,\r\n        payload: watchlist,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_WATCHLIST,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const clearFavouriteMoviesAndWatchList = () => ({\r\n  type: types.CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST,\r\n})\r\n\r\nexport const updateFavouriteMovies = ({ account_id, session_id, media_id }) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let favorite = true\r\n  for (let i = 0; i < getState().movies.favouriteMovies.length; i++) {\r\n    if (Number(getState().movies.favouriteMovies[i].id) === Number(media_id)) {\r\n      favorite = false\r\n    }\r\n  }\r\n  CallApi.post(`/account/${account_id}/favorite`, {\r\n    params: {\r\n      session_id,\r\n    },\r\n    body: {\r\n      media_type: 'movie',\r\n      media_id,\r\n      favorite,\r\n    },\r\n  })\r\n    .then(() => {\r\n      dispatch({\r\n        type: types.UPDATE_SUCCESS_FAVOURITE_MOVIES,\r\n      })\r\n      return CallApi.get(`/account/${account_id}/favorite/movies`, {\r\n        params: { session_id },\r\n      }).then((favouriteMovies) => {\r\n        dispatch({\r\n          type: types.FETCH_SUCCESS_FAVOURITE_MOVIES,\r\n          payload: favouriteMovies,\r\n        })\r\n      })\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.UPDATE_ERROR_FAVOURITE_MOVIES,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateWatchlist = ({ account_id, session_id, media_id }) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let watchlist = true\r\n  for (let i = 0; i < getState().movies.watchlist.length; i++) {\r\n    if (Number(getState().movies.watchlist[i].id) === Number(media_id)) {\r\n      watchlist = false\r\n    }\r\n  }\r\n  CallApi.post(`/account/${account_id}/watchlist`, {\r\n    params: {\r\n      session_id,\r\n    },\r\n    body: {\r\n      media_type: 'movie',\r\n      media_id,\r\n      watchlist,\r\n    },\r\n  })\r\n    .then(() => {\r\n      dispatch({\r\n        type: types.UPDATE_SUCCESS_WATCHLIST,\r\n      })\r\n      return CallApi.get(`/account/${account_id}/watchlist/movies`, {\r\n        params: { session_id },\r\n      }).then((watchlist) => {\r\n        dispatch({\r\n          type: types.FETCH_SUCCESS_WATCHLIST,\r\n          payload: watchlist,\r\n        })\r\n      })\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.UPDATE_ERROR_WATCHLIST,\r\n      })\r\n    })\r\n}\r\n","export const FETCH_REQUEST_FAVOURITE_MOVIES = 'FETCH_REQUEST_FAVOURITE_MOVIES'\r\nexport const FETCH_SUCCESS_FAVOURITE_MOVIES = 'FETCH_SUCCESS_FAVOURITE_MOVIES'\r\nexport const FETCH_ERROR_FAVOURITE_MOVIES = 'FETCH_ERROR_FAVOURITE_MOVIES'\r\nexport const CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST =\r\n  'CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST'\r\nexport const FETCH_REQUEST_WATCHLIST = 'FETCH_REQUEST_WATCHLIST'\r\nexport const FETCH_SUCCESS_WATCHLIST = 'FETCH_SUCCESS_WATCHLIST'\r\nexport const FETCH_ERROR_WATCHLIST = 'FETCH_ERROR_WATCHLIST'\r\nexport const UPDATE_SUCCESS_FAVOURITE_MOVIES = 'UPDATE_SUCCESS_FAVOURITE_MOVIES'\r\nexport const UPDATE_ERROR_FAVOURITE_MOVIES = 'UPDATE_ERROR_FAVOURITE_MOVIES'\r\nexport const UPDATE_SUCCESS_WATCHLIST = 'UPDATE_SUCCESS_WATCHLIST'\r\nexport const UPDATE_ERROR_WATCHLIST = 'UPDATE_ERROR_WATCHLIST'\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as authActions from '../redux/auth/auth.actions'\r\nimport * as moviesActions from '../redux/movies/movies.actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    movies: state.movies,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  authActions: bindActionCreators(authActions, dispatch),\r\n  moviesActions: bindActionCreators(moviesActions, dispatch),\r\n})\r\n\r\nexport const withAuth = (Component) =>\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(\r\n    class WithAuth extends React.Component {\r\n      render() {\r\n        return <Component {...this.props} />\r\n      }\r\n    }\r\n  )\r\n","import React from 'react'\r\nimport CallApi from '../../../utils/apies'\r\nimport classNames from 'classnames'\r\nimport { withAuth } from '../../../hoc/WithAuth.jsx'\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass AuthenticationForm extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      submitting: false,\r\n      errors: {},\r\n    }\r\n  }\r\n\r\n  getUser = () => {\r\n    const { authActions, moviesActions } = this.props\r\n\r\n    this.setState({\r\n      submitting: true,\r\n    })\r\n\r\n    CallApi.get('/authentication/token/new')\r\n      .then((data) => {\r\n        return CallApi.post('/authentication/token/validate_with_login', {\r\n          body: {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            request_token: data.request_token,\r\n          },\r\n        })\r\n      })\r\n      .then((data) => {\r\n        return CallApi.post('/authentication/session/new', {\r\n          body: { request_token: data.request_token },\r\n        })\r\n      })\r\n      .then((data) => {\r\n        cookies.set('session_id', data.session_id, {\r\n          path: '/',\r\n          maxAge: 2592000,\r\n        })\r\n        return CallApi.get('/account', {\r\n          params: { session_id: data.session_id },\r\n        })\r\n      })\r\n      .then((user) => {\r\n        this.setState(\r\n          {\r\n            submitting: false,\r\n          },\r\n          () => {\r\n            authActions.updateAuth({\r\n              user,\r\n              session_id: cookies.get('session_id'),\r\n            })\r\n            moviesActions.fetchFavouriteMovies({\r\n              session_id: cookies.get('session_id'),\r\n              account_id: user.id,\r\n            })\r\n            moviesActions.fetchWatchlist({\r\n              session_id: cookies.get('session_id'),\r\n              account_id: user.id,\r\n            })\r\n          }\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        this.setState((prevState) => ({\r\n          errors: {\r\n            ...prevState.errors,\r\n            base: error.status_message,\r\n          },\r\n          submitting: false,\r\n        }))\r\n      })\r\n  }\r\n\r\n  validateFields = () => {\r\n    const errors = {}\r\n\r\n    if (this.state.username.length < 5) {\r\n      errors.username = 'Укажите логин, минимум 5 значений'\r\n    }\r\n    if (this.state.password.length < 6) {\r\n      errors.password = 'Укажите пароль, минимум 6 зачений'\r\n    }\r\n    if (this.state.password !== this.state.repeatPassword) {\r\n      errors.repeatPassword = 'Пароли не идентичны'\r\n    }\r\n\r\n    return errors\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState((prevState) => ({\r\n      [name]: value,\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: null,\r\n        base: null,\r\n      },\r\n    }))\r\n  }\r\n\r\n  handleBlur = (e) => {\r\n    const { name } = e.target\r\n    const errors = this.validateFields()\r\n    const error = errors[name]\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: { ...prevState.errors, [name]: error },\r\n      }))\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const errors = this.validateFields()\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState({\r\n        errors: { ...errors },\r\n      })\r\n    } else {\r\n      this.getUser()\r\n    }\r\n  }\r\n\r\n  getClassForInpur = (errorName) => {\r\n    return classNames('form-control', {\r\n      invalid: this.state.errors[errorName],\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      repeatPassword,\r\n      submitting,\r\n      errors,\r\n    } = this.state\r\n    return (\r\n      <form\r\n        className=\"form-group login-form container pl-4 pr-4\"\r\n        onSubmit={this.onSubmit}\r\n      >\r\n        <div className=\"login-form__title\">Авторизация</div>\r\n        <label htmlFor=\"username\">Логин:</label>\r\n        <input\r\n          className={this.getClassForInpur('username')}\r\n          type=\"text\"\r\n          placeholder=\"Логин\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.username && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.username}</div>\r\n        )}\r\n        <label htmlFor=\"password\" className=\"mt-2\">\r\n          Пароль:\r\n        </label>\r\n        <input\r\n          className={this.getClassForInpur('password')}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.password && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.password}</div>\r\n        )}\r\n        <label htmlFor=\"repeatPassword\" className=\"mt-2\">\r\n          Повторите пароль:\r\n        </label>\r\n        <input\r\n          className={this.getClassForInpur('repeatPassword')}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          id=\"repeatPassword\"\r\n          name=\"repeatPassword\"\r\n          value={repeatPassword}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.repeatPassword && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.repeatPassword}</div>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success text-center col-12 mt-4 pb-2\"\r\n          disabled={submitting}\r\n        >\r\n          Отправить\r\n        </button>\r\n        <div className=\"invalid-feedback pl-2 mt-2 text-center\">\r\n          {errors.base}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(AuthenticationForm)\r\n","import React from 'react'\r\nimport { Modal, ModalBody } from 'reactstrap'\r\nimport AuthenticationForm from './AuthenticationForm.jsx'\r\n\r\nexport default class Authentication extends React.Component {\r\n  toggleModal = () => {\r\n    const { showAuthFormModal, toggleAuthFormModal } = this.props\r\n    toggleAuthFormModal(!showAuthFormModal)\r\n  }\r\n\r\n  render() {\r\n    const { showAuthFormModal } = this.props\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"btn btn-outline-warning\"\r\n          type=\"button\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          Войти\r\n        </button>\r\n        <Modal isOpen={showAuthFormModal} toggle={this.toggleModal}>\r\n          <ModalBody>\r\n            <AuthenticationForm />\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class UIDropdown extends React.Component {\r\n  static defaultProps = {\r\n    position: {\r\n      top: 'auto',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      left: 'auto',\r\n    },\r\n  }\r\n\r\n  toggleShow = () => {\r\n    const { auth, authActions } = this.props\r\n    authActions.toggleUserModal(!auth.showUserModal)\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    return (\r\n      <>\r\n        {this.props.render(this.toggleShow)}\r\n        <div className=\"dropdown__wrapper\">\r\n          {auth.showUserModal && (\r\n            <div\r\n              className=\"dropdown__popover\"\r\n              style={{ ...this.props.position }}\r\n            >\r\n              <div className=\"dropdown__cover\" onClick={this.toggleShow}></div>\r\n              <div className=\"dropdown__wrapper-content\">\r\n                {this.props.children(this.toggleShow)}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\nimport UIDropdown from '../UI Components/UIDropdown.jsx'\r\nimport CallApi from '../../utils/apies'\r\n\r\nclass User extends React.Component {\r\n  handleLogOut = () => {\r\n    const { auth, authActions, moviesActions } = this.props\r\n    CallApi.delete('/authentication/session', {\r\n      body: { session_id: auth.session_id },\r\n    }).then(() => {\r\n      authActions.onLogOut()\r\n      moviesActions.clearFavouriteMoviesAndWatchList()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"dropdown\">\r\n          <UIDropdown\r\n            render={(toggleShow) => (\r\n              <img\r\n                className=\"user-img rounded-circle\"\r\n                src={\r\n                  `https://image.tmdb.org/t/p/w500${user.avatar.tmdb.avatar_path}` ||\r\n                  `https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64`\r\n                }\r\n                alt=\"\"\r\n                onClick={toggleShow}\r\n              />\r\n            )}\r\n            position={{ right: '2.5px', top: '50px' }}\r\n            {...this.props}\r\n          >\r\n            {() => {\r\n              return (\r\n                <div className=\"dropdown__menu\">\r\n                  <div\r\n                    className=\"dropdown__menu-item\"\r\n                    onClick={this.handleLogOut}\r\n                  >\r\n                    Выйти\r\n                  </div>\r\n                </div>\r\n              )\r\n            }}\r\n          </UIDropdown>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(User)\r\n","import React from 'react'\r\nimport Authentication from './Authentication/Authentication.jsx'\r\nimport User from './User.jsx'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const { auth, authActions } = this.props\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"pt-3 pb-3 row col-12\">\r\n          <div className=\"title col-2\">\r\n            <p className=\"title__name\">\r\n              Kino<span className=\"title__sub-name\">poisk</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"search col-8\"></div>\r\n          <div className=\"login col-2\">\r\n            {auth.user ? (\r\n              <User />\r\n            ) : (\r\n              <Authentication\r\n                showAuthFormModal={auth.showAuthFormModal}\r\n                toggleAuthFormModal={authActions.toggleAuthFormModal}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(Header)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class SortBy extends React.PureComponent {\r\n  static propTypes = {\r\n    sort_by: PropTypes.string.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  }\r\n\r\n  static defaultProps = {\r\n    sortByOptions: [\r\n      {\r\n        label: 'Популярные (убывание)',\r\n        value: 'popularity.desc',\r\n      },\r\n      {\r\n        label: 'Популярные (возростание)',\r\n        value: 'popularity.asc',\r\n      },\r\n      {\r\n        label: 'Рейтинг (убывание)',\r\n        value: 'vote_average.desc',\r\n      },\r\n      {\r\n        label: 'Рейтинг (возростание)',\r\n        value: 'vote_average.asc',\r\n      },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { sort_by, onChangeFilters, sortByOptions } = this.props\r\n\r\n    return (\r\n      <select\r\n        className=\"form-control\"\r\n        name=\"sort_by\"\r\n        id=\"sort_by\"\r\n        value={sort_by}\r\n        onChange={onChangeFilters}\r\n      >\r\n        {sortByOptions.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass Pagination extends React.Component {\r\n  render() {\r\n    const { onChangePage, page, total_pages } = this.props\r\n    return (\r\n      <div className=\"pagination form-group row col-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light col-4\"\r\n          onClick={onChangePage.bind(null, page - 1)}\r\n          disabled={page === 1}\r\n        >\r\n          Назад\r\n        </button>\r\n        <div className=\"col-4 total-pages\">{`${page} из ${total_pages}`}</div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light col-4\"\r\n          onClick={onChangePage.bind(null, page + 1)}\r\n          disabled={page === Number(total_pages)}\r\n        >\r\n          Вперед\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(Pagination)\r\n","import React from 'react'\r\nimport { primary_release_year } from '../../data/primary_release_year'\r\n\r\nexport default class PrimaryReleaseYear extends React.Component {\r\n  static defaultProps = {\r\n    primary_release_year_options: [...primary_release_year],\r\n  }\r\n  render() {\r\n    const {\r\n      primary_release_year_options,\r\n      primary_release_year,\r\n      onChangeFilters,\r\n    } = this.props\r\n\r\n    return (\r\n      <>\r\n        <label\r\n          className=\"filters-label primary-release-year\"\r\n          htmlFor=\"primary_release_year\"\r\n        >\r\n          Дата выхода\r\n        </label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"primary_release_year\"\r\n          id=\"primary_release_year\"\r\n          value={primary_release_year}\r\n          onChange={onChangeFilters}\r\n        >\r\n          {primary_release_year_options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","export const primary_release_year = [\r\n  {\r\n    label: '1950',\r\n    value: '1950',\r\n  },\r\n  {\r\n    label: '1951',\r\n    value: '1951',\r\n  },\r\n  {\r\n    label: '1952',\r\n    value: '1952',\r\n  },\r\n  {\r\n    label: '1953',\r\n    value: '1953',\r\n  },\r\n  {\r\n    label: '1954',\r\n    value: '1954',\r\n  },\r\n  {\r\n    label: '1955',\r\n    value: '1955',\r\n  },\r\n  {\r\n    label: '1956',\r\n    value: '1956',\r\n  },\r\n  {\r\n    label: '1957',\r\n    value: '1957',\r\n  },\r\n  {\r\n    label: '1958',\r\n    value: '1958',\r\n  },\r\n  {\r\n    label: '1959',\r\n    value: '1959',\r\n  },\r\n  {\r\n    label: '1960',\r\n    value: '1960',\r\n  },\r\n\r\n  {\r\n    label: '1961',\r\n    value: '1961',\r\n  },\r\n  {\r\n    label: '1962',\r\n    value: '1962',\r\n  },\r\n  {\r\n    label: '1963',\r\n    value: '1963',\r\n  },\r\n  {\r\n    label: '1964',\r\n    value: '1964',\r\n  },\r\n  {\r\n    label: '1965',\r\n    value: '1965',\r\n  },\r\n  {\r\n    label: '1966',\r\n    value: '1966',\r\n  },\r\n  {\r\n    label: '1967',\r\n    value: '1967',\r\n  },\r\n  {\r\n    label: '1968',\r\n    value: '1968',\r\n  },\r\n  {\r\n    label: '1969',\r\n    value: '1969',\r\n  },\r\n  {\r\n    label: '1970',\r\n    value: '1970',\r\n  },\r\n\r\n  {\r\n    label: '1971',\r\n    value: '1971',\r\n  },\r\n  {\r\n    label: '1972',\r\n    value: '1972',\r\n  },\r\n  {\r\n    label: '1973',\r\n    value: '1973',\r\n  },\r\n  {\r\n    label: '1974',\r\n    value: '1974',\r\n  },\r\n  {\r\n    label: '1975',\r\n    value: '1975',\r\n  },\r\n  {\r\n    label: '1976',\r\n    value: '1976',\r\n  },\r\n  {\r\n    label: '1977',\r\n    value: '1977',\r\n  },\r\n  {\r\n    label: '1978',\r\n    value: '1978',\r\n  },\r\n  {\r\n    label: '1979',\r\n    value: '1979',\r\n  },\r\n  {\r\n    label: '1980',\r\n    value: '1980',\r\n  },\r\n\r\n  {\r\n    label: '1981',\r\n    value: '1981',\r\n  },\r\n  {\r\n    label: '1982',\r\n    value: '1982',\r\n  },\r\n  {\r\n    label: '1983',\r\n    value: '1983',\r\n  },\r\n  {\r\n    label: '1984',\r\n    value: '1984',\r\n  },\r\n  {\r\n    label: '1985',\r\n    value: '1985',\r\n  },\r\n  {\r\n    label: '1986',\r\n    value: '1986',\r\n  },\r\n  {\r\n    label: '1987',\r\n    value: '1987',\r\n  },\r\n  {\r\n    label: '1988',\r\n    value: '1988',\r\n  },\r\n  {\r\n    label: '1989',\r\n    value: '1989',\r\n  },\r\n  {\r\n    label: '1990',\r\n    value: '1990',\r\n  },\r\n\r\n  {\r\n    label: '1991',\r\n    value: '1991',\r\n  },\r\n  {\r\n    label: '1992',\r\n    value: '1992',\r\n  },\r\n  {\r\n    label: '1993',\r\n    value: '1993',\r\n  },\r\n  {\r\n    label: '1994',\r\n    value: '1994',\r\n  },\r\n  {\r\n    label: '1995',\r\n    value: '1995',\r\n  },\r\n  {\r\n    label: '1996',\r\n    value: '1996',\r\n  },\r\n  {\r\n    label: '1997',\r\n    value: '1997',\r\n  },\r\n  {\r\n    label: '1998',\r\n    value: '1998',\r\n  },\r\n  {\r\n    label: '1999',\r\n    value: '1999',\r\n  },\r\n  {\r\n    label: '2000',\r\n    value: '2000',\r\n  },\r\n\r\n  {\r\n    label: '2001',\r\n    value: '2001',\r\n  },\r\n  {\r\n    label: '2002',\r\n    value: '2002',\r\n  },\r\n  {\r\n    label: '2003',\r\n    value: '2003',\r\n  },\r\n  {\r\n    label: '2004',\r\n    value: '2004',\r\n  },\r\n  {\r\n    label: '2005',\r\n    value: '2005',\r\n  },\r\n  {\r\n    label: '2006',\r\n    value: '2006',\r\n  },\r\n  {\r\n    label: '2007',\r\n    value: '2007',\r\n  },\r\n  {\r\n    label: '2008',\r\n    value: '2008',\r\n  },\r\n  {\r\n    label: '2009',\r\n    value: '2009',\r\n  },\r\n  {\r\n    label: '2010',\r\n    value: '2010',\r\n  },\r\n\r\n  {\r\n    label: '2011',\r\n    value: '2011',\r\n  },\r\n  {\r\n    label: '2012',\r\n    value: '2012',\r\n  },\r\n  {\r\n    label: '2013',\r\n    value: '2013',\r\n  },\r\n  {\r\n    label: '2014',\r\n    value: '2014',\r\n  },\r\n  {\r\n    label: '2015',\r\n    value: '2015',\r\n  },\r\n  {\r\n    label: '2016',\r\n    value: '2016',\r\n  },\r\n  {\r\n    label: '2017',\r\n    value: '2017',\r\n  },\r\n  {\r\n    label: '2018',\r\n    value: '2018',\r\n  },\r\n  {\r\n    label: '2019',\r\n    value: '2019',\r\n  },\r\n  {\r\n    label: '2020',\r\n    value: '2020',\r\n  },\r\n\r\n  {\r\n    label: '2021',\r\n    value: '2021',\r\n  },\r\n  {\r\n    label: '2022',\r\n    value: '2022',\r\n  },\r\n  {\r\n    label: '2023',\r\n    value: '2023',\r\n  },\r\n  {\r\n    label: '2024',\r\n    value: '2024',\r\n  },\r\n  {\r\n    label: '2025',\r\n    value: '2025',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Genres = (props) => {\r\n  const { with_genres, allGenres, onChangeGenres } = props\r\n  return (\r\n    <>\r\n      <label className=\"filters-label genre-label\" htmlFor=\"with_genres\">\r\n        Жанры\r\n      </label>\r\n      <div className=\"genres\" id=\"with_genres\">\r\n        {allGenres.map((item) => {\r\n          return (\r\n            <div className=\"genres__item\" key={item.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={item.id}\r\n                checked={\r\n                  with_genres.indexOf(String(item.id)) === -1 ? false : true\r\n                }\r\n                className=\"genres__item__checkbox\"\r\n                name=\"with_genres\"\r\n                id={item.id}\r\n                onChange={onChangeGenres}\r\n              />\r\n              <label className=\"genres__item__label\" htmlFor={item.id}>\r\n                {item.name}\r\n              </label>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGenres.defaultProps = {\r\n  allGenres: [],\r\n}\r\n\r\nGenres.propTypes = {\r\n  allGenres: PropTypes.array.isRequired,\r\n  onChangeGenres: PropTypes.func.isRequired,\r\n  with_genres: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Genres\r\n","import React from 'react'\r\nimport Genres from './Genres'\r\nimport { api_key_movieDB_v3 } from '../../../utils/apies'\r\n\r\nexport default class GenresContainer extends React.PureComponent {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      allGenres: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const link = `https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key_movieDB_v3}&language=ru-RU`\r\n    return fetch(link)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ allGenres: data.genres })\r\n      })\r\n  }\r\n\r\n  onChangeGenres = (e) => {\r\n    const { name, value } = e.target\r\n    const { onChangeFilters, with_genres } = this.props\r\n\r\n    if (with_genres.indexOf(String(value)) === -1) {\r\n      onChangeFilters({\r\n        target: { name, value: [...with_genres, value] },\r\n      })\r\n    } else {\r\n      onChangeFilters({\r\n        target: { name, value: with_genres.filter((item) => item !== value) },\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Genres\r\n        with_genres={this.props.with_genres}\r\n        allGenres={this.state.allGenres}\r\n        onChangeGenres={this.onChangeGenres}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport SortBy from './SortBy.jsx'\r\nimport Pagination from './Pagination.jsx'\r\nimport PrimaryReleaseYear from './PrimaryReleaseYear.jsx'\r\nimport Genres from './Genres/GenresContainer.jsx'\r\n\r\nclass Filters extends React.Component {\r\n  render() {\r\n    const {\r\n      filters,\r\n      onChangeFilters,\r\n      page,\r\n      onChangePage,\r\n      total_pages,\r\n      resetFilters,\r\n    } = this.props\r\n\r\n    return (\r\n      <>\r\n        <form className=\"mb-3\">\r\n          <div className=\"sort form-group\">\r\n            <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n              Сортировать\r\n            </label>\r\n            <SortBy\r\n              sort_by={filters.sort_by}\r\n              onChangeFilters={onChangeFilters}\r\n            />\r\n          </div>\r\n          <Pagination\r\n            total_pages={total_pages}\r\n            onChangePage={onChangePage}\r\n            page={page}\r\n          />\r\n          <div className=\"sort form-group mt-3\">\r\n            <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n              Фильтровать\r\n            </label>\r\n            <PrimaryReleaseYear\r\n              primary_release_year={filters.primary_release_year}\r\n              onChangeFilters={onChangeFilters}\r\n            />\r\n            <Genres\r\n              with_genres={filters.with_genres}\r\n              onChangeFilters={onChangeFilters}\r\n            />\r\n            <button\r\n              onClick={resetFilters}\r\n              className=\"btn btn-light col-12 mt-2\"\r\n              type=\"button\"\r\n              style={{ background: '#e2e6ea' }}\r\n            >\r\n              Сбросить фильтры\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filters\r\n","export const months = [\r\n  {\r\n    month: '01',\r\n    shortName: 'янв',\r\n    fullName: 'январь',\r\n  },\r\n  {\r\n    month: '02',\r\n    shortName: 'фев',\r\n    fullName: 'февраль',\r\n  },\r\n  {\r\n    month: '03',\r\n    shortName: 'мар',\r\n    fullName: 'март',\r\n  },\r\n  {\r\n    month: '04',\r\n    shortName: 'апр',\r\n    fullName: 'апрель',\r\n  },\r\n  {\r\n    month: '05',\r\n    shortName: 'май',\r\n    fullName: 'май',\r\n  },\r\n  {\r\n    month: '06',\r\n    shortName: 'июн',\r\n    fullName: 'июнь',\r\n  },\r\n  {\r\n    month: '07',\r\n    shortName: 'июл',\r\n    fullName: 'июль',\r\n  },\r\n  {\r\n    month: '08',\r\n    shortName: 'авг',\r\n    fullName: 'август',\r\n  },\r\n  {\r\n    month: '09',\r\n    shortName: 'сен',\r\n    fullName: 'сентябрь',\r\n  },\r\n  {\r\n    month: '10',\r\n    shortName: 'окт',\r\n    fullName: 'октябрь',\r\n  },\r\n  {\r\n    month: '11',\r\n    shortName: 'ноя',\r\n    fullName: 'ноябрь',\r\n  },\r\n  {\r\n    month: '12',\r\n    shortName: 'дек',\r\n    fullName: 'декабрь',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Star,\r\n  StarBorder,\r\n  Bookmark,\r\n  BookmarkBorder,\r\n  MoreHoriz,\r\n} from '@material-ui/icons'\r\nimport { api_img_url } from '../../utils/apies'\r\nimport { months } from '../../data/months'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass MovieItem extends React.PureComponent {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      showMovieModal: false,\r\n      favourite: false,\r\n    }\r\n  }\r\n\r\n  getMonthNameOnMonthNumber = () => {\r\n    const { movie } = this.props\r\n\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  toogleMovieModal = () => {\r\n    const { auth, authActions } = this.props\r\n    if (auth.session_id) {\r\n      this.setState((state) => ({\r\n        showMovieModal: !state.showMovieModal,\r\n      }))\r\n    } else {\r\n      authActions.toggleAuthFormModal(true)\r\n    }\r\n  }\r\n\r\n  updateFavouriteMovies = () => {\r\n    const { movie, auth, moviesActions } = this.props\r\n\r\n    moviesActions.updateFavouriteMovies({\r\n      account_id: auth.account_id,\r\n      session_id: auth.session_id,\r\n      media_id: movie.id,\r\n    })\r\n\r\n    this.toogleMovieModal()\r\n  }\r\n\r\n  updateWatchlist = () => {\r\n    const { movie, auth, moviesActions } = this.props\r\n\r\n    moviesActions.updateWatchlist({\r\n      account_id: auth.account_id,\r\n      session_id: auth.session_id,\r\n      media_id: movie.id,\r\n    })\r\n\r\n    this.toogleMovieModal()\r\n  }\r\n\r\n  forEachFavouriteMoviesOrWatchlist = (moviesArr) => {\r\n    const { movie } = this.props\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  render() {\r\n    const { movie, movies } = this.props\r\n\r\n    const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n      this.getMonthNameOnMonthNumber()[0].shortName\r\n    } ${movie.release_date.substr(0, 4)}`\r\n\r\n    return (\r\n      <div className=\"movie-card\">\r\n        <Link to={`/kinopoisk/movie/${movie.id}`}>\r\n          <img\r\n            className=\"movie-card__img\"\r\n            src={\r\n              movie.poster_path\r\n                ? `${api_img_url}${movie.poster_path}`\r\n                : `not-foundPoster.png`\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n        <div className=\"movie-card__desc\">\r\n          <p className=\"movie-card__desc__vote-average\">\r\n            {String(movie.vote_average).length === 1\r\n              ? `${movie.vote_average}.0`\r\n              : movie.vote_average}\r\n          </p>\r\n          <p className=\"movie-card__desc__title\">\r\n            <Link to={`/kinopoisk/movie/${movie.id}`}>{movie.title}</Link>\r\n          </p>\r\n          <p className=\"movie-card__desc__release-date\">{releaseDate}</p>\r\n        </div>\r\n        <div className=\"movie-settings\">\r\n          <div className=\"movie-settings__wrapper\">\r\n            <div className=\"more-horiz\">\r\n              <MoreHoriz\r\n                className=\"more-horiz__icon\"\r\n                onClick={this.toogleMovieModal}\r\n              />\r\n            </div>\r\n            {this.state.showMovieModal && (\r\n              <div className=\"settings-menu\">\r\n                <div\r\n                  className=\"favourite-movie settings-menuItem\"\r\n                  onClick={this.updateFavouriteMovies}\r\n                >\r\n                  {this.forEachFavouriteMoviesOrWatchlist(\r\n                    movies.favouriteMovies\r\n                  ) ? (\r\n                    <Star />\r\n                  ) : (\r\n                    <StarBorder />\r\n                  )}\r\n                  <span className=\"settings-title\">Избранное</span>\r\n                </div>\r\n                <div\r\n                  className=\"willWatch-movie settings-menuItem\"\r\n                  onClick={this.updateWatchlist}\r\n                >\r\n                  {this.forEachFavouriteMoviesOrWatchlist(movies.watchlist) ? (\r\n                    <Bookmark />\r\n                  ) : (\r\n                    <BookmarkBorder />\r\n                  )}\r\n                  <span className=\"settings-title\">Посмотреть</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(MovieItem)\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem.jsx'\r\nimport MoviesHOC from './MoviesHOC.jsx'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MoviesList extends React.PureComponent {\r\n  static defaultProps = {\r\n    movies: [],\r\n  }\r\n\r\n  static propTypes = {\r\n    movies: PropTypes.array.isRequired,\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.movies.map((movie) => {\r\n          return (\r\n            <MovieItem\r\n              movie={movie}\r\n              favouriteMovies={this.props.favouriteMovies}\r\n              watchList={this.props.watchList}\r\n              key={movie.id}\r\n            />\r\n          )\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MoviesHOC(MoviesList)\r\n","import React from 'react'\r\nimport CallApi from '../../utils/apies'\r\nimport _ from 'lodash'\r\n\r\nexport default (Component) =>\r\n  class MoviesHOC extends React.PureComponent {\r\n    constructor() {\r\n      super()\r\n\r\n      this.state = {\r\n        movies: [],\r\n        favouriteMovies: [],\r\n        watchList: [],\r\n        firstRender: true,\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { filters, page } = this.props\r\n      this.getMovies(filters, page)\r\n    }\r\n\r\n    componentDidUpdate(p) {\r\n      const { onChangePage, filters, page, account_id, session_id } = this.props\r\n      const { firstRender } = this.state\r\n\r\n      if (!_.isEqual(p.filters, filters)) {\r\n        onChangePage(1)\r\n        this.getMovies(filters)\r\n        if (account_id && session_id) {\r\n          this.getSettingsMovies('favouriteMovies', '/favorite/movies')\r\n          this.getSettingsMovies('watchList', '/watchlist/movies')\r\n        } else {\r\n          this.setState({\r\n            favouriteMovies: [],\r\n            watchList: [],\r\n          })\r\n        }\r\n      }\r\n\r\n      if (p.page !== page) {\r\n        this.getMovies(filters, page)\r\n        if (account_id && session_id) {\r\n          this.getSettingsMovies('favouriteMovies', '/favorite/movies')\r\n          this.getSettingsMovies('watchList', '/watchlist/movies')\r\n        } else {\r\n          this.setState({\r\n            favouriteMovies: [],\r\n            watchList: [],\r\n          })\r\n        }\r\n      }\r\n\r\n      if (firstRender && account_id && session_id) {\r\n        this.getSettingsMovies('favouriteMovies', '/favorite/movies')\r\n        this.getSettingsMovies('watchList', '/watchlist/movies')\r\n        this.setState({\r\n          firstRender: false,\r\n        })\r\n      }\r\n    }\r\n\r\n    getSettingsMovies = (nameState, url) => {\r\n      const { session_id, account_id, page } = this.props\r\n      const apiParams = {\r\n        language: 'ru-RU',\r\n        session_id,\r\n        page,\r\n      }\r\n\r\n      return CallApi.get(`/account/${account_id}${url}`, {\r\n        params: apiParams,\r\n      }).then((data) => {\r\n        this.setState({\r\n          [nameState]: data.results,\r\n        })\r\n      })\r\n    }\r\n\r\n    getMovies = (filters, page = 1) => {\r\n      const { sort_by, primary_release_year, with_genres } = filters\r\n      const { onChangeTotalPages } = this.props\r\n\r\n      const apiParams = {\r\n        language: 'ru-RU',\r\n        sort_by,\r\n        page,\r\n        primary_release_year,\r\n        with_genres: with_genres.join(','),\r\n      }\r\n\r\n      return CallApi.get('/discover/movie', { params: apiParams }).then(\r\n        (data) => {\r\n          onChangeTotalPages(data.total_pages)\r\n          this.setState({ movies: data.results })\r\n        }\r\n      )\r\n    }\r\n\r\n    render() {\r\n      const { movies, favouriteMovies, watchList } = this.state\r\n      return (\r\n        <Component\r\n          account_id={this.props.account_id}\r\n          session_id={this.props.session_id}\r\n          movies={movies}\r\n          favouriteMovies={favouriteMovies}\r\n          watchList={watchList}\r\n        />\r\n      )\r\n    }\r\n  }\r\n","import React from 'react'\r\nimport Filters from '../../Filters/Filters.jsx'\r\nimport MoviesList from '../../Movies/MoviesList.jsx'\r\n\r\nexport default class MoviesPage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.initialState = {\r\n      filters: {\r\n        sort_by: 'popularity.desc',\r\n        primary_release_year: new Date().getFullYear(),\r\n        with_genres: [],\r\n      },\r\n      page: 1,\r\n      total_pages: '',\r\n    }\r\n\r\n    this.state = { ...this.initialState }\r\n  }\r\n\r\n  onChangeFilters = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    this.setState((s) => ({\r\n      filters: {\r\n        ...s.filters,\r\n        [name]: value,\r\n      },\r\n    }))\r\n  }\r\n\r\n  onChangePage = (page) => {\r\n    this.setState({\r\n      page,\r\n    })\r\n  }\r\n\r\n  onChangeTotalPages = (total_pages) => {\r\n    this.setState({\r\n      total_pages,\r\n    })\r\n  }\r\n\r\n  resetFilters = () => {\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  render() {\r\n    const { filters, page, total_pages } = this.state\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"filters col-3\">\r\n          <Filters\r\n            onChangeFilters={this.onChangeFilters}\r\n            filters={filters}\r\n            page={page}\r\n            onChangePage={this.onChangePage}\r\n            total_pages={total_pages}\r\n            resetFilters={this.resetFilters}\r\n          />\r\n        </div>\r\n        <div className=\"movies col-9\">\r\n          <MoviesList\r\n            filters={filters}\r\n            page={page}\r\n            onChangePage={this.onChangePage}\r\n            onChangeTotalPages={this.onChangeTotalPages}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport CallApi from '../../../utils/apies'\r\n\r\nexport default class MoviePage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      movie: {},\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    CallApi.get(`/movie/${this.props.match.params.id}`, {\r\n      params: {\r\n        language: 'ru-RU',\r\n      },\r\n    }).then((data) => this.setState({ movie: data }))\r\n  }\r\n  render() {\r\n    const { movie } = this.state\r\n\r\n    return <div>{movie.title}</div>\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.jsx'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport MoviesPage from './components/pages/MoviesPage/MoviesPage.jsx'\r\nimport MoviePage from './components/pages/MoviePage/MoviePage.jsx'\r\nimport { withAuth } from './hoc/WithAuth.jsx'\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    const { auth, authActions, moviesActions } = this.props\r\n    if (auth.session_id) {\r\n      authActions.fetchAuth(auth.session_id)\r\n      moviesActions.fetchFavouriteMovies({\r\n        session_id: auth.session_id,\r\n        account_id: auth.account_id,\r\n      })\r\n      moviesActions.fetchWatchlist({\r\n        session_id: auth.session_id,\r\n        account_id: auth.account_id,\r\n      })\r\n    } else {\r\n      authActions.toggleAuthFormModal(true)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"header\">\r\n          <Header />\r\n        </div>\r\n        <div className=\"main container\">\r\n          <Route exact path=\"/kinopoisk/\" component={MoviesPage} />\r\n          <Route path=\"/kinopoisk/movie/:id\" component={MoviePage} />\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Cookies from 'universal-cookie'\r\n\r\nexport const cookies = new Cookies()\r\n","import * as types from './auth.types'\r\nimport { cookies } from '../../utils/cookies'\r\n\r\nconst initialState = {\r\n  user: null,\r\n  session_id: cookies.get('session_id'),\r\n  account_id: cookies.get('account_id'),\r\n  isAuth: false,\r\n  showUserModal: false,\r\n  showAuthFormModal: false,\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_AUTH:\r\n      cookies.set('session_id', action.payload.session_id, {\r\n        path: '/',\r\n        maxAge: 2592000,\r\n      })\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        session_id: action.payload.session_id,\r\n        account_id: action.payload.user.id,\r\n        isAuth: true,\r\n        showUserModal: false,\r\n        showAuthFormModal: false,\r\n      }\r\n    case types.LOGOUT:\r\n      cookies.remove('session_id')\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        session_id: null,\r\n        account_id: null,\r\n        isAuth: false,\r\n        showUserModal: false,\r\n        showAuthFormModal: false,\r\n      }\r\n    case types.TOGGLE_USER_MODAL:\r\n      return {\r\n        ...state,\r\n        showUserModal: action.payload,\r\n      }\r\n    case types.TOGGLE_AUTH_FORM_MODAL:\r\n      return {\r\n        ...state,\r\n        showAuthFormModal: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from './movies.types'\r\n\r\nconst initialState = {\r\n  favouriteMovies: [],\r\n  watchlist: [],\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.FETCH_SUCCESS_FAVOURITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: action.payload.results,\r\n      }\r\n    case types.FETCH_SUCCESS_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        watchlist: action.payload.results,\r\n      }\r\n    case types.CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: [],\r\n        watchlist: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport authReducer from '../redux/auth/auth.reducer'\r\nimport moviesReducer from '../redux/movies/movies.reducer'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  movies: moviesReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { UPDATE_AUTH, LOGOUT } from './auth/auth.types'\r\nimport { cookies } from '../utils/cookies'\r\nimport rootReducer from '../redux/rootReducer'\r\n\r\n// const updateCookies = () => (next) => (action) => {\r\n//   if (action.type === UPDATE_AUTH) {\r\n//     cookies.set('session_id', action.payload.session_id, {\r\n//       path: '/',\r\n//       maxAge: 2592000,\r\n//     })\r\n//   }\r\n//   if (action.type === LOGOUT) {\r\n//     cookies.remove('session_id')\r\n//   }\r\n//   return next(action)\r\n// }\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport WebFont from 'webfontloader'\r\nimport store from './redux/store'\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Open Sans'],\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('kinopoisk')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}