{"version":3,"sources":["utils/apies.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","redux/movies/movies.actions.js","redux/movies/movies.types.js","hoc/WithAuth.jsx","components/Header/Authentication/AuthenticationForm.jsx","components/Header/Authentication/Authentication.jsx","components/UI Components/UIDropdown.jsx","components/Header/User.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Pagination.jsx","components/Filters/PrimaryReleaseYear.jsx","data/primary_release_year.js","components/Filters/Genres/Genres.jsx","components/Filters/Genres/GenresContainer.jsx","components/Filters/Filters.jsx","data/months.js","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MoviePage.jsx","components/pages/UserPage/Tabs/FavouriteMoviesTab.jsx","components/pages/UserPage/Tabs/WatchlistTab.jsx","components/pages/UserPage/UserPage.jsx","App.jsx","serviceWorker.js","utils/cookies.js","redux/auth/auth.reducer.js","redux/movies/movies.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["api_url","api_key_movieDB_v3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","React","Component","fetchAuth","session_id","dispatch","type","get","language","user","updateAuth","payload","onLogOut","toggleUserModal","movies","toggleAuthFormModal","show","fetchFavouriteMovies","account_id","favouriteMovies","fetchWatchlist","watchlist","clearFavouriteMoviesAndWatchList","updateFavouriteMovies","media_id","getState","favorite","i","length","Number","id","post","media_type","updateWatchlist","mapStateToProps","state","auth","mapDispatchToProps","authActions","bindActionCreators","moviesActions","withAuth","connect","this","props","cookies","Cookies","getUser","setState","submitting","data","username","password","request_token","set","path","maxAge","prevState","errors","base","status_message","validateFields","repeatPassword","onChange","e","target","name","value","handleBlur","Object","keys","onSubmit","preventDefault","getClassForInpur","errorName","classNames","invalid","className","htmlFor","placeholder","onBlur","disabled","Authentication","toggleModal","showAuthFormModal","onClick","href","rel","Modal","isOpen","toggle","ModalBody","UIDropdown","toggleShow","showUserModal","render","style","position","children","defaultProps","top","right","bottom","left","handleLogOut","delete","src","avatar","tmdb","avatar_path","alt","to","SortBy","sort_by","onChangeFilters","sortByOptions","map","option","key","label","PureComponent","onChangePage","page","total_pages","bind","PrimaryReleaseYear","primary_release_year_options","primary_release_year","Genres","with_genres","allGenres","onChangeGenres","item","checked","indexOf","String","GenresContainer","filter","link","genres","Filters","filters","resetFilters","background","months","month","shortName","fullName","getMonthNameOnMonthNumber","movie","release_date","substr","toogleMovieModal","showMovieModal","forEachFavouriteMoviesOrWatchlist","moviesArr","starMovie","forEach","favourite","releaseDate","poster_path","vote_average","title","MoreHoriz","Star","StarBorder","Bookmark","BookmarkBorder","MoviesList","watchList","MoviesHOC","getSettingsMovies","nameState","apiParams","results","getMovies","onChangeTotalPages","join","p","_","isEqual","MoviesPage","s","initialState","Date","getFullYear","MoviePage","match","arr","resultArr","push","console","log","belongs_to_collection","backdrop_path","width","original_title","forEachGenresCompaniesCountries","lineHeight","tagline","original_language","production_companies","production_countries","overview","activeTab","tab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","Row","Col","sm","exact","component","Boolean","window","location","hostname","isAuth","combineReducers","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","next","remove","WebFont","load","google","families","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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ACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAGT,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAGT,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAGT,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAGT,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,OACPpD,MAAO,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","file":"static/js/main.14f2e02e.chunk.js","sourcesContent":["import React from 'react'\r\nimport queryString from 'query-string'\r\n\r\nexport const api_url = 'https://api.themoviedb.org/3'\r\n\r\nexport const api_img_url = 'https://image.tmdb.org/t/p/w500'\r\n\r\nexport const api_key_movieDB_v3 = '2bf9f43ff01f800a4b2838b95fcce99e'\r\n\r\nexport const api_key_movieDB_v4 =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYmY5ZjQzZmYwMWY4MDBhNGIyODM4Yjk1ZmNjZTk5ZSIsInN1YiI6IjVjZTkyOWU3YzNhMzY4MWM0ZTFlODRkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fffZy6W_ZCD20rApqm9asph-hWYo_w8zjvPNLyZf-wY'\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n      .then((response) => {\r\n        if (response.status < 400) {\r\n          return resolve(response.json())\r\n        } else {\r\n          throw response\r\n        }\r\n      })\r\n      .catch((response) => response.json().then((error) => reject(error)))\r\n  })\r\n}\r\n\r\nexport default class CallApi extends React.Component {\r\n  static get(url, options = {}) {\r\n    const { params } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n  }\r\n  static post(url, options = {}) {\r\n    const { params, body } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    )\r\n  }\r\n  static delete(url, options = {}) {\r\n    const { params, body } = options\r\n\r\n    const queryStringParams = {\r\n      api_key: api_key_movieDB_v3,\r\n      ...params,\r\n    }\r\n\r\n    return fetchApi(\r\n      `${api_url}${url}?${queryString.stringify(queryStringParams)}`,\r\n      {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    )\r\n  }\r\n}\r\n","import CallApi from '../../utils/apies'\r\nimport * as types from './auth.types'\r\n\r\nexport const fetchAuth = (session_id) => (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_AUTH,\r\n  })\r\n  CallApi.get('/account', { params: { session_id, language: 'ru-RU' } })\r\n    .then((user) => {\r\n      dispatch(updateAuth({ user, session_id }))\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_AUTH,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateAuth = ({ user, session_id }) => ({\r\n  type: types.UPDATE_AUTH,\r\n  payload: {\r\n    user,\r\n    session_id,\r\n  },\r\n})\r\n\r\nexport const onLogOut = () => {\r\n  return {\r\n    type: types.LOGOUT,\r\n  }\r\n}\r\n\r\nexport const toggleUserModal = (movies) => {\r\n  return {\r\n    type: types.TOGGLE_USER_MODAL,\r\n    payload: movies,\r\n  }\r\n}\r\n\r\nexport const toggleAuthFormModal = (show) => {\r\n  return {\r\n    type: types.TOGGLE_AUTH_FORM_MODAL,\r\n    payload: show,\r\n  }\r\n}\r\n","export const UPDATE_AUTH = 'UPDATE_AUTH'\r\nexport const FETCH_REQUEST_AUTH = 'FETCH_REQUEST_AUTH'\r\nexport const FETCH_ERROR_AUTH = 'FETCH_ERROR_AUTH'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const TOGGLE_USER_MODAL = 'TOGGLE_USER_MODAL'\r\nexport const TOGGLE_AUTH_FORM_MODAL = 'TOGGLE_AUTH_FORM_MODAL'\r\n\r\n","import CallApi from '../../utils/apies'\r\nimport * as types from './movies.types'\r\n\r\nexport const fetchFavouriteMovies = ({ session_id, account_id }) => (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_FAVOURITE_MOVIES,\r\n  })\r\n  CallApi.get(`/account/${account_id}/favorite/movies`, {\r\n    params: { session_id, language: 'ru-RU' },\r\n  })\r\n    .then((favouriteMovies) => {\r\n      dispatch({\r\n        type: types.FETCH_SUCCESS_FAVOURITE_MOVIES,\r\n        payload: favouriteMovies,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_FAVOURITE_MOVIES,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const fetchWatchlist = ({ session_id, account_id }) => (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_REQUEST_WATCHLIST,\r\n  })\r\n  CallApi.get(`/account/${account_id}/watchlist/movies`, {\r\n    params: { session_id, language: 'ru-RU' },\r\n  })\r\n    .then((watchlist) => {\r\n      dispatch({\r\n        type: types.FETCH_SUCCESS_WATCHLIST,\r\n        payload: watchlist,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: types.FETCH_ERROR_WATCHLIST,\r\n        payload: error,\r\n      })\r\n    })\r\n}\r\n\r\nexport const clearFavouriteMoviesAndWatchList = () => ({\r\n  type: types.CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST,\r\n})\r\n\r\nexport const updateFavouriteMovies = ({ account_id, session_id, media_id }) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let favorite = true\r\n  for (let i = 0; i < getState().movies.favouriteMovies.length; i++) {\r\n    if (Number(getState().movies.favouriteMovies[i].id) === Number(media_id)) {\r\n      favorite = false\r\n    }\r\n  }\r\n  CallApi.post(`/account/${account_id}/favorite`, {\r\n    params: {\r\n      session_id,\r\n      language: 'ru-RU',\r\n    },\r\n    body: {\r\n      media_type: 'movie',\r\n      media_id,\r\n      favorite,\r\n    },\r\n  })\r\n    .then(() => {\r\n      return CallApi.get(`/account/${account_id}/favorite/movies`, {\r\n        params: { session_id, language: 'ru-RU' },\r\n      }).then((favouriteMovies) => {\r\n        dispatch({\r\n          type: types.UPDATE_SUCCESS_FAVOURITE_MOVIES,\r\n          payload: favouriteMovies,\r\n        })\r\n      })\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.UPDATE_ERROR_FAVOURITE_MOVIES,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateWatchlist = ({ account_id, session_id, media_id }) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let watchlist = true\r\n  for (let i = 0; i < getState().movies.watchlist.length; i++) {\r\n    if (Number(getState().movies.watchlist[i].id) === Number(media_id)) {\r\n      watchlist = false\r\n    }\r\n  }\r\n  CallApi.post(`/account/${account_id}/watchlist`, {\r\n    params: {\r\n      session_id,\r\n      language: 'ru-RU',\r\n    },\r\n    body: {\r\n      media_type: 'movie',\r\n      media_id,\r\n      watchlist,\r\n    },\r\n  })\r\n    .then(() => {\r\n      return CallApi.get(`/account/${account_id}/watchlist/movies`, {\r\n        params: { session_id, language: 'ru-RU' },\r\n      }).then((watchlist) => {\r\n        dispatch({\r\n          type: types.UPDATE_SUCCESS_WATCHLIST,\r\n          payload: watchlist,\r\n        })\r\n      })\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: types.UPDATE_ERROR_WATCHLIST,\r\n      })\r\n    })\r\n}","export const FETCH_REQUEST_FAVOURITE_MOVIES = 'FETCH_REQUEST_FAVOURITE_MOVIES'\r\nexport const FETCH_SUCCESS_FAVOURITE_MOVIES = 'FETCH_SUCCESS_FAVOURITE_MOVIES'\r\nexport const FETCH_ERROR_FAVOURITE_MOVIES = 'FETCH_ERROR_FAVOURITE_MOVIES'\r\nexport const CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST =\r\n  'CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST'\r\nexport const FETCH_REQUEST_WATCHLIST = 'FETCH_REQUEST_WATCHLIST'\r\nexport const FETCH_SUCCESS_WATCHLIST = 'FETCH_SUCCESS_WATCHLIST'\r\nexport const FETCH_ERROR_WATCHLIST = 'FETCH_ERROR_WATCHLIST'\r\nexport const UPDATE_SUCCESS_FAVOURITE_MOVIES = 'UPDATE_SUCCESS_FAVOURITE_MOVIES'\r\nexport const UPDATE_ERROR_FAVOURITE_MOVIES = 'UPDATE_ERROR_FAVOURITE_MOVIES'\r\nexport const UPDATE_SUCCESS_WATCHLIST = 'UPDATE_SUCCESS_WATCHLIST'\r\nexport const UPDATE_ERROR_WATCHLIST = 'UPDATE_ERROR_WATCHLIST'\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as authActions from '../redux/auth/auth.actions'\r\nimport * as moviesActions from '../redux/movies/movies.actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    movies: state.movies,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  authActions: bindActionCreators(authActions, dispatch),\r\n  moviesActions: bindActionCreators(moviesActions, dispatch),\r\n})\r\n\r\nexport const withAuth = (Component) =>\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(\r\n    class WithAuth extends React.Component {\r\n      render() {\r\n        return <Component {...this.props} />\r\n      }\r\n    }\r\n  )\r\n","import React from 'react'\r\nimport CallApi from '../../../utils/apies'\r\nimport classNames from 'classnames'\r\nimport { withAuth } from '../../../hoc/WithAuth.jsx'\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass AuthenticationForm extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      username: 'user_kinopoisk',\r\n      password: 'user_1234',\r\n      repeatPassword: 'user_1234',\r\n      submitting: false,\r\n      errors: {},\r\n    }\r\n  }\r\n\r\n  getUser = () => {\r\n    const { authActions, moviesActions } = this.props\r\n\r\n    this.setState({\r\n      submitting: true,\r\n    })\r\n\r\n    CallApi.get('/authentication/token/new')\r\n      .then((data) => {\r\n        return CallApi.post('/authentication/token/validate_with_login', {\r\n          body: {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            request_token: data.request_token,\r\n          },\r\n        })\r\n      })\r\n      .then((data) => {\r\n        return CallApi.post('/authentication/session/new', {\r\n          body: { request_token: data.request_token },\r\n        })\r\n      })\r\n      .then((data) => {\r\n        cookies.set('session_id', data.session_id, {\r\n          path: '/kinopoisk/',\r\n          maxAge: 2592000,\r\n        })\r\n        return CallApi.get('/account', {\r\n          params: { session_id: data.session_id },\r\n        })\r\n      })\r\n      .then((user) => {\r\n        this.setState(\r\n          {\r\n            submitting: false,\r\n          },\r\n          () => {\r\n            authActions.updateAuth({\r\n              user,\r\n              session_id: cookies.get('session_id'),\r\n            })\r\n            moviesActions.fetchFavouriteMovies({\r\n              session_id: cookies.get('session_id'),\r\n              account_id: user.id,\r\n            })\r\n            moviesActions.fetchWatchlist({\r\n              session_id: cookies.get('session_id'),\r\n              account_id: user.id,\r\n            })\r\n          }\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        this.setState((prevState) => ({\r\n          errors: {\r\n            ...prevState.errors,\r\n            base: error.status_message,\r\n          },\r\n          submitting: false,\r\n        }))\r\n      })\r\n  }\r\n\r\n  validateFields = () => {\r\n    const errors = {}\r\n\r\n    if (this.state.username.length < 5) {\r\n      errors.username = 'Укажите логин, минимум 5 значений'\r\n    }\r\n    if (this.state.password.length < 6) {\r\n      errors.password = 'Укажите пароль, минимум 6 зачений'\r\n    }\r\n    if (this.state.password !== this.state.repeatPassword) {\r\n      errors.repeatPassword = 'Пароли не идентичны'\r\n    }\r\n\r\n    return errors\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState((prevState) => ({\r\n      [name]: value,\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: null,\r\n        base: null,\r\n      },\r\n    }))\r\n  }\r\n\r\n  handleBlur = (e) => {\r\n    const { name } = e.target\r\n    const errors = this.validateFields()\r\n    const error = errors[name]\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: { ...prevState.errors, [name]: error },\r\n      }))\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const errors = this.validateFields()\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState({\r\n        errors: { ...errors },\r\n      })\r\n    } else {\r\n      this.getUser()\r\n    }\r\n  }\r\n\r\n  getClassForInpur = (errorName) => {\r\n    return classNames('form-control', {\r\n      invalid: this.state.errors[errorName],\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      repeatPassword,\r\n      submitting,\r\n      errors,\r\n    } = this.state\r\n    return (\r\n      <form\r\n        className=\"form-group login-form container pl-4 pr-4\"\r\n        onSubmit={this.onSubmit}\r\n      >\r\n        <div className=\"login-form__title\">Авторизация</div>\r\n        <label htmlFor=\"username\">Логин:</label>\r\n        <input\r\n          className={this.getClassForInpur('username')}\r\n          type=\"text\"\r\n          placeholder=\"Логин\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.username && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.username}</div>\r\n        )}\r\n        <label htmlFor=\"password\" className=\"mt-2\">\r\n          Пароль:\r\n        </label>\r\n        <input\r\n          className={this.getClassForInpur('password')}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.password && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.password}</div>\r\n        )}\r\n        <label htmlFor=\"repeatPassword\" className=\"mt-2\">\r\n          Повторите пароль:\r\n        </label>\r\n        <input\r\n          className={this.getClassForInpur('repeatPassword')}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          id=\"repeatPassword\"\r\n          name=\"repeatPassword\"\r\n          value={repeatPassword}\r\n          onChange={this.onChange}\r\n          onBlur={this.handleBlur}\r\n        />\r\n        {errors.repeatPassword && (\r\n          <div className=\"invalid-feedback pl-2\">{errors.repeatPassword}</div>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success text-center col-12 mt-4 pb-2\"\r\n          disabled={submitting}\r\n        >\r\n          Отправить\r\n        </button>\r\n        <div className=\"invalid-feedback pl-2 mt-2 text-center\">\r\n          {errors.base}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(AuthenticationForm)\r\n","import React from 'react'\r\nimport { Modal, ModalBody } from 'reactstrap'\r\nimport AuthenticationForm from './AuthenticationForm.jsx'\r\n\r\nexport default class Authentication extends React.Component {\r\n  toggleModal = () => {\r\n    const { showAuthFormModal, toggleAuthFormModal } = this.props\r\n    toggleAuthFormModal(!showAuthFormModal)\r\n  }\r\n\r\n  render() {\r\n    const { showAuthFormModal } = this.props\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"btn btn-outline-warning\"\r\n          type=\"button\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          Войти\r\n        </button>\r\n        <button className=\"ml-2 btn btn-outline-warning\" type=\"button\">\r\n          <a\r\n            href=\"https://www.themoviedb.org/signup\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Регистрация\r\n          </a>\r\n        </button>\r\n        <Modal isOpen={showAuthFormModal} toggle={this.toggleModal}>\r\n          <ModalBody>\r\n            <AuthenticationForm />\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class UIDropdown extends React.Component {\r\n  static defaultProps = {\r\n    position: {\r\n      top: 'auto',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      left: 'auto',\r\n    },\r\n  }\r\n\r\n  toggleShow = () => {\r\n    const { auth, authActions } = this.props\r\n    authActions.toggleUserModal(!auth.showUserModal)\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    return (\r\n      <>\r\n        {this.props.render(this.toggleShow)}\r\n        <div className=\"dropdown__wrapper\">\r\n          {auth.showUserModal && (\r\n            <div\r\n              className=\"dropdown__popover\"\r\n              style={{ ...this.props.position }}\r\n            >\r\n              <div className=\"dropdown__cover\" onClick={this.toggleShow}></div>\r\n              <div className=\"dropdown__wrapper-content\">\r\n                {this.props.children(this.toggleShow)}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\nimport UIDropdown from '../UI Components/UIDropdown.jsx'\r\nimport CallApi from '../../utils/apies'\r\n\r\nclass User extends React.Component {\r\n  handleLogOut = () => {\r\n    const { auth, authActions, moviesActions } = this.props\r\n    CallApi.delete('/authentication/session', {\r\n      body: { session_id: auth.session_id },\r\n    }).then(() => {\r\n      authActions.onLogOut()\r\n      moviesActions.clearFavouriteMoviesAndWatchList()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"dropdown\">\r\n          <UIDropdown\r\n            render={(toggleShow) => (\r\n              <img\r\n                className=\"user-img rounded-circle\"\r\n                src={\r\n                  `https://image.tmdb.org/t/p/w500${user.avatar.tmdb.avatar_path}` ||\r\n                  `https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64`\r\n                }\r\n                alt=\"\"\r\n                onClick={toggleShow}\r\n              />\r\n            )}\r\n            position={{ right: '2.5px', top: '50px' }}\r\n            {...this.props}\r\n          >\r\n            {() => {\r\n              return (\r\n                <div className=\"dropdown__menu\">\r\n                  <div className=\"dropdown__menu-item user-name\">\r\n                    {user.name || user.username}\r\n                    <Link to={`/kinopoisk/profile/${user.id}`}>\r\n                      <p className=\"user-name__sub-title\">Смотреть профиль</p>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"dropdown__menu-item\">\r\n                    <Link to={'/kinopoisk/'} onClick={this.handleLogOut}>\r\n                      Выйти\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }}\r\n          </UIDropdown>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(User)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Authentication from './Authentication/Authentication.jsx'\r\nimport User from './User.jsx'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const { auth, authActions } = this.props\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"pt-2 pb-2 row col-12\">\r\n          <div className=\"title col-4\">\r\n            <p className=\"title__name\">\r\n              <Link to={'/kinopoisk/'}>\r\n                Kino<span className=\"title__sub-name\">poisk</span>\r\n              </Link>\r\n              <span className=\"ml-2 with-TMDB-Api\">\r\n                <a\r\n                  href=\"https://www.themoviedb.org/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  with TMDB Api\r\n                </a>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"search col-6\"></div>\r\n          <div className=\"login col-2\">\r\n            {auth.user ? (\r\n              <User />\r\n            ) : (\r\n              <Authentication\r\n                showAuthFormModal={auth.showAuthFormModal}\r\n                toggleAuthFormModal={authActions.toggleAuthFormModal}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(Header)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class SortBy extends React.PureComponent {\r\n  static propTypes = {\r\n    sort_by: PropTypes.string.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  }\r\n\r\n  static defaultProps = {\r\n    sortByOptions: [\r\n      {\r\n        label: 'Популярные (убывание)',\r\n        value: 'popularity.desc',\r\n      },\r\n      {\r\n        label: 'Популярные (возростание)',\r\n        value: 'popularity.asc',\r\n      },\r\n      {\r\n        label: 'Рейтинг (убывание)',\r\n        value: 'vote_average.desc',\r\n      },\r\n      {\r\n        label: 'Рейтинг (возростание)',\r\n        value: 'vote_average.asc',\r\n      },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { sort_by, onChangeFilters, sortByOptions } = this.props\r\n\r\n    return (\r\n      <select\r\n        className=\"form-control\"\r\n        name=\"sort_by\"\r\n        id=\"sort_by\"\r\n        value={sort_by}\r\n        onChange={onChangeFilters}\r\n      >\r\n        {sortByOptions.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass Pagination extends React.Component {\r\n  render() {\r\n    const { onChangePage, page, total_pages } = this.props\r\n    return (\r\n      <div className=\"pagination form-group row col-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light col-4\"\r\n          onClick={onChangePage.bind(null, page - 1)}\r\n          disabled={page === 1}\r\n        >\r\n          Назад\r\n        </button>\r\n        <div className=\"col-4 total-pages\">{`${page} из ${total_pages}`}</div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light col-4\"\r\n          onClick={onChangePage.bind(null, page + 1)}\r\n          disabled={page === Number(total_pages)}\r\n        >\r\n          Вперед\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(Pagination)\r\n","import React from 'react'\r\nimport { primary_release_year } from '../../data/primary_release_year'\r\n\r\nexport default class PrimaryReleaseYear extends React.Component {\r\n  static defaultProps = {\r\n    primary_release_year_options: [...primary_release_year],\r\n  }\r\n  render() {\r\n    const {\r\n      primary_release_year_options,\r\n      primary_release_year,\r\n      onChangeFilters,\r\n    } = this.props\r\n\r\n    return (\r\n      <>\r\n        <label\r\n          className=\"filters-label primary-release-year\"\r\n          htmlFor=\"primary_release_year\"\r\n        >\r\n          Дата выхода\r\n        </label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"primary_release_year\"\r\n          id=\"primary_release_year\"\r\n          value={primary_release_year}\r\n          onChange={onChangeFilters}\r\n        >\r\n          {primary_release_year_options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","export const primary_release_year = [\r\n  {\r\n    label: '1950',\r\n    value: '1950',\r\n  },\r\n  {\r\n    label: '1951',\r\n    value: '1951',\r\n  },\r\n  {\r\n    label: '1952',\r\n    value: '1952',\r\n  },\r\n  {\r\n    label: '1953',\r\n    value: '1953',\r\n  },\r\n  {\r\n    label: '1954',\r\n    value: '1954',\r\n  },\r\n  {\r\n    label: '1955',\r\n    value: '1955',\r\n  },\r\n  {\r\n    label: '1956',\r\n    value: '1956',\r\n  },\r\n  {\r\n    label: '1957',\r\n    value: '1957',\r\n  },\r\n  {\r\n    label: '1958',\r\n    value: '1958',\r\n  },\r\n  {\r\n    label: '1959',\r\n    value: '1959',\r\n  },\r\n  {\r\n    label: '1960',\r\n    value: '1960',\r\n  },\r\n\r\n  {\r\n    label: '1961',\r\n    value: '1961',\r\n  },\r\n  {\r\n    label: '1962',\r\n    value: '1962',\r\n  },\r\n  {\r\n    label: '1963',\r\n    value: '1963',\r\n  },\r\n  {\r\n    label: '1964',\r\n    value: '1964',\r\n  },\r\n  {\r\n    label: '1965',\r\n    value: '1965',\r\n  },\r\n  {\r\n    label: '1966',\r\n    value: '1966',\r\n  },\r\n  {\r\n    label: '1967',\r\n    value: '1967',\r\n  },\r\n  {\r\n    label: '1968',\r\n    value: '1968',\r\n  },\r\n  {\r\n    label: '1969',\r\n    value: '1969',\r\n  },\r\n  {\r\n    label: '1970',\r\n    value: '1970',\r\n  },\r\n\r\n  {\r\n    label: '1971',\r\n    value: '1971',\r\n  },\r\n  {\r\n    label: '1972',\r\n    value: '1972',\r\n  },\r\n  {\r\n    label: '1973',\r\n    value: '1973',\r\n  },\r\n  {\r\n    label: '1974',\r\n    value: '1974',\r\n  },\r\n  {\r\n    label: '1975',\r\n    value: '1975',\r\n  },\r\n  {\r\n    label: '1976',\r\n    value: '1976',\r\n  },\r\n  {\r\n    label: '1977',\r\n    value: '1977',\r\n  },\r\n  {\r\n    label: '1978',\r\n    value: '1978',\r\n  },\r\n  {\r\n    label: '1979',\r\n    value: '1979',\r\n  },\r\n  {\r\n    label: '1980',\r\n    value: '1980',\r\n  },\r\n\r\n  {\r\n    label: '1981',\r\n    value: '1981',\r\n  },\r\n  {\r\n    label: '1982',\r\n    value: '1982',\r\n  },\r\n  {\r\n    label: '1983',\r\n    value: '1983',\r\n  },\r\n  {\r\n    label: '1984',\r\n    value: '1984',\r\n  },\r\n  {\r\n    label: '1985',\r\n    value: '1985',\r\n  },\r\n  {\r\n    label: '1986',\r\n    value: '1986',\r\n  },\r\n  {\r\n    label: '1987',\r\n    value: '1987',\r\n  },\r\n  {\r\n    label: '1988',\r\n    value: '1988',\r\n  },\r\n  {\r\n    label: '1989',\r\n    value: '1989',\r\n  },\r\n  {\r\n    label: '1990',\r\n    value: '1990',\r\n  },\r\n\r\n  {\r\n    label: '1991',\r\n    value: '1991',\r\n  },\r\n  {\r\n    label: '1992',\r\n    value: '1992',\r\n  },\r\n  {\r\n    label: '1993',\r\n    value: '1993',\r\n  },\r\n  {\r\n    label: '1994',\r\n    value: '1994',\r\n  },\r\n  {\r\n    label: '1995',\r\n    value: '1995',\r\n  },\r\n  {\r\n    label: '1996',\r\n    value: '1996',\r\n  },\r\n  {\r\n    label: '1997',\r\n    value: '1997',\r\n  },\r\n  {\r\n    label: '1998',\r\n    value: '1998',\r\n  },\r\n  {\r\n    label: '1999',\r\n    value: '1999',\r\n  },\r\n  {\r\n    label: '2000',\r\n    value: '2000',\r\n  },\r\n\r\n  {\r\n    label: '2001',\r\n    value: '2001',\r\n  },\r\n  {\r\n    label: '2002',\r\n    value: '2002',\r\n  },\r\n  {\r\n    label: '2003',\r\n    value: '2003',\r\n  },\r\n  {\r\n    label: '2004',\r\n    value: '2004',\r\n  },\r\n  {\r\n    label: '2005',\r\n    value: '2005',\r\n  },\r\n  {\r\n    label: '2006',\r\n    value: '2006',\r\n  },\r\n  {\r\n    label: '2007',\r\n    value: '2007',\r\n  },\r\n  {\r\n    label: '2008',\r\n    value: '2008',\r\n  },\r\n  {\r\n    label: '2009',\r\n    value: '2009',\r\n  },\r\n  {\r\n    label: '2010',\r\n    value: '2010',\r\n  },\r\n\r\n  {\r\n    label: '2011',\r\n    value: '2011',\r\n  },\r\n  {\r\n    label: '2012',\r\n    value: '2012',\r\n  },\r\n  {\r\n    label: '2013',\r\n    value: '2013',\r\n  },\r\n  {\r\n    label: '2014',\r\n    value: '2014',\r\n  },\r\n  {\r\n    label: '2015',\r\n    value: '2015',\r\n  },\r\n  {\r\n    label: '2016',\r\n    value: '2016',\r\n  },\r\n  {\r\n    label: '2017',\r\n    value: '2017',\r\n  },\r\n  {\r\n    label: '2018',\r\n    value: '2018',\r\n  },\r\n  {\r\n    label: '2019',\r\n    value: '2019',\r\n  },\r\n  {\r\n    label: '2020',\r\n    value: '2020',\r\n  },\r\n\r\n  {\r\n    label: '2021',\r\n    value: '2021',\r\n  },\r\n  {\r\n    label: '2022',\r\n    value: '2022',\r\n  },\r\n  {\r\n    label: '2023',\r\n    value: '2023',\r\n  },\r\n  {\r\n    label: '2024',\r\n    value: '2024',\r\n  },\r\n  {\r\n    label: '2025',\r\n    value: '2025',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Genres = (props) => {\r\n  const { with_genres, allGenres, onChangeGenres } = props\r\n  return (\r\n    <>\r\n      <label className=\"filters-label genre-label\" htmlFor=\"with_genres\">\r\n        Жанры\r\n      </label>\r\n      <div className=\"genres\" id=\"with_genres\">\r\n        {allGenres.map((item) => {\r\n          return (\r\n            <div className=\"genres__item\" key={item.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={item.id}\r\n                checked={\r\n                  with_genres.indexOf(String(item.id)) === -1 ? false : true\r\n                }\r\n                className=\"genres__item__checkbox\"\r\n                name=\"with_genres\"\r\n                id={item.id}\r\n                onChange={onChangeGenres}\r\n              />\r\n              <label className=\"genres__item__label\" htmlFor={item.id}>\r\n                {item.name}\r\n              </label>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGenres.defaultProps = {\r\n  allGenres: [],\r\n}\r\n\r\nGenres.propTypes = {\r\n  allGenres: PropTypes.array.isRequired,\r\n  onChangeGenres: PropTypes.func.isRequired,\r\n  with_genres: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Genres\r\n","import React from 'react'\r\nimport Genres from './Genres'\r\nimport { api_key_movieDB_v3 } from '../../../utils/apies'\r\n\r\nexport default class GenresContainer extends React.PureComponent {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      allGenres: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const link = `https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key_movieDB_v3}&language=ru-RU`\r\n    return fetch(link)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ allGenres: data.genres })\r\n      })\r\n  }\r\n\r\n  onChangeGenres = (e) => {\r\n    const { name, value } = e.target\r\n    const { onChangeFilters, with_genres } = this.props\r\n\r\n    if (with_genres.indexOf(String(value)) === -1) {\r\n      onChangeFilters({\r\n        target: { name, value: [...with_genres, value] },\r\n      })\r\n    } else {\r\n      onChangeFilters({\r\n        target: { name, value: with_genres.filter((item) => item !== value) },\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Genres\r\n        with_genres={this.props.with_genres}\r\n        allGenres={this.state.allGenres}\r\n        onChangeGenres={this.onChangeGenres}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport SortBy from './SortBy.jsx'\r\nimport Pagination from './Pagination.jsx'\r\nimport PrimaryReleaseYear from './PrimaryReleaseYear.jsx'\r\nimport Genres from './Genres/GenresContainer.jsx'\r\n\r\nclass Filters extends React.Component {\r\n  render() {\r\n    const {\r\n      filters,\r\n      onChangeFilters,\r\n      page,\r\n      onChangePage,\r\n      total_pages,\r\n      resetFilters,\r\n    } = this.props\r\n\r\n    return (\r\n      <>\r\n        <form className=\"mb-3\">\r\n          <div className=\"sort form-group\">\r\n            <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n              Сортировать\r\n            </label>\r\n            <SortBy\r\n              sort_by={filters.sort_by}\r\n              onChangeFilters={onChangeFilters}\r\n            />\r\n          </div>\r\n          <Pagination\r\n            total_pages={total_pages}\r\n            onChangePage={onChangePage}\r\n            page={page}\r\n          />\r\n          <div className=\"sort form-group mt-3\">\r\n            <label className=\"filters-label\" htmlFor=\"sort_by\">\r\n              Фильтровать\r\n            </label>\r\n            <PrimaryReleaseYear\r\n              primary_release_year={filters.primary_release_year}\r\n              onChangeFilters={onChangeFilters}\r\n            />\r\n            <Genres\r\n              with_genres={filters.with_genres}\r\n              onChangeFilters={onChangeFilters}\r\n            />\r\n            <button\r\n              onClick={resetFilters}\r\n              className=\"btn btn-light col-12 mt-2\"\r\n              type=\"button\"\r\n              style={{ background: '#e2e6ea' }}\r\n            >\r\n              Сбросить фильтры\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filters\r\n","export const months = [\r\n  {\r\n    month: '01',\r\n    shortName: 'янв',\r\n    fullName: 'январь',\r\n  },\r\n  {\r\n    month: '02',\r\n    shortName: 'фев',\r\n    fullName: 'февраль',\r\n  },\r\n  {\r\n    month: '03',\r\n    shortName: 'мар',\r\n    fullName: 'март',\r\n  },\r\n  {\r\n    month: '04',\r\n    shortName: 'апр',\r\n    fullName: 'апрель',\r\n  },\r\n  {\r\n    month: '05',\r\n    shortName: 'май',\r\n    fullName: 'май',\r\n  },\r\n  {\r\n    month: '06',\r\n    shortName: 'июн',\r\n    fullName: 'июнь',\r\n  },\r\n  {\r\n    month: '07',\r\n    shortName: 'июл',\r\n    fullName: 'июль',\r\n  },\r\n  {\r\n    month: '08',\r\n    shortName: 'авг',\r\n    fullName: 'август',\r\n  },\r\n  {\r\n    month: '09',\r\n    shortName: 'сен',\r\n    fullName: 'сентябрь',\r\n  },\r\n  {\r\n    month: '10',\r\n    shortName: 'окт',\r\n    fullName: 'октябрь',\r\n  },\r\n  {\r\n    month: '11',\r\n    shortName: 'ноя',\r\n    fullName: 'ноябрь',\r\n  },\r\n  {\r\n    month: '12',\r\n    shortName: 'дек',\r\n    fullName: 'декабрь',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Star,\r\n  StarBorder,\r\n  Bookmark,\r\n  BookmarkBorder,\r\n  MoreHoriz,\r\n} from '@material-ui/icons'\r\nimport { api_img_url } from '../../utils/apies'\r\nimport { months } from '../../data/months'\r\nimport { withAuth } from '../../hoc/WithAuth.jsx'\r\n\r\nclass MovieItem extends React.PureComponent {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      showMovieModal: false,\r\n      favourite: false,\r\n    }\r\n  }\r\n\r\n  getMonthNameOnMonthNumber = () => {\r\n    const { movie } = this.props\r\n\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  toogleMovieModal = () => {\r\n    const { auth, authActions } = this.props\r\n    if (auth.session_id) {\r\n      this.setState((state) => ({\r\n        showMovieModal: !state.showMovieModal,\r\n      }))\r\n    } else {\r\n      authActions.toggleAuthFormModal(true)\r\n    }\r\n  }\r\n\r\n  updateFavouriteMovies = () => {\r\n    const { movie, auth, moviesActions } = this.props\r\n\r\n    moviesActions.updateFavouriteMovies({\r\n      account_id: auth.account_id,\r\n      session_id: auth.session_id,\r\n      media_id: movie.id,\r\n    })\r\n\r\n    this.toogleMovieModal()\r\n  }\r\n\r\n  updateWatchlist = () => {\r\n    const { movie, auth, moviesActions } = this.props\r\n\r\n    moviesActions.updateWatchlist({\r\n      account_id: auth.account_id,\r\n      session_id: auth.session_id,\r\n      media_id: movie.id,\r\n    })\r\n\r\n    this.toogleMovieModal()\r\n  }\r\n\r\n  forEachFavouriteMoviesOrWatchlist = (moviesArr) => {\r\n    const { movie } = this.props\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  render() {\r\n    const { movie, movies } = this.props\r\n\r\n    const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n      this.getMonthNameOnMonthNumber()[0].shortName\r\n    } ${movie.release_date.substr(0, 4)}`\r\n\r\n    return (\r\n      <div className=\"movie-card\">\r\n        <Link to={`/kinopoisk/movie/${movie.id}`}>\r\n          <img\r\n            className=\"movie-card__img\"\r\n            src={\r\n              movie.poster_path\r\n                ? `${api_img_url}${movie.poster_path}`\r\n                : `/kinopoisk/images/not-foundPoster.png`\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n        <div className=\"movie-card__desc\">\r\n          <p className=\"movie-card__desc__vote-average\">\r\n            {String(movie.vote_average).length === 1\r\n              ? `${movie.vote_average}.0`\r\n              : movie.vote_average}\r\n          </p>\r\n          <p className=\"movie-card__desc__title\">\r\n            <Link to={`/kinopoisk/movie/${movie.id}`}>{movie.title}</Link>\r\n          </p>\r\n          <p className=\"movie-card__desc__release-date\">{releaseDate}</p>\r\n        </div>\r\n        <div className=\"movie-settings\">\r\n          <div className=\"movie-settings__wrapper\">\r\n            <div className=\"more-horiz\">\r\n              <MoreHoriz\r\n                className=\"more-horiz__icon\"\r\n                onClick={this.toogleMovieModal}\r\n              />\r\n            </div>\r\n            {this.state.showMovieModal && (\r\n              <div className=\"settings-menu\">\r\n                <div\r\n                  className=\"favourite-movie settings-menuItem\"\r\n                  onClick={this.updateFavouriteMovies}\r\n                >\r\n                  {this.forEachFavouriteMoviesOrWatchlist(\r\n                    movies.favouriteMovies\r\n                  ) ? (\r\n                    <Star />\r\n                  ) : (\r\n                    <StarBorder />\r\n                  )}\r\n                  <span className=\"settings-title\">Избранное</span>\r\n                </div>\r\n                <div\r\n                  className=\"willWatch-movie settings-menuItem\"\r\n                  onClick={this.updateWatchlist}\r\n                >\r\n                  {this.forEachFavouriteMoviesOrWatchlist(movies.watchlist) ? (\r\n                    <Bookmark />\r\n                  ) : (\r\n                    <BookmarkBorder />\r\n                  )}\r\n                  <span className=\"settings-title\">Посмотреть</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(MovieItem)\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem.jsx'\r\nimport MoviesHOC from './MoviesHOC.jsx'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MoviesList extends React.PureComponent {\r\n  static defaultProps = {\r\n    movies: [],\r\n  }\r\n\r\n  static propTypes = {\r\n    movies: PropTypes.array.isRequired,\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.movies.map((movie) => {\r\n          return (\r\n            <MovieItem\r\n              movie={movie}\r\n              favouriteMovies={this.props.favouriteMovies}\r\n              watchList={this.props.watchList}\r\n              key={movie.id}\r\n            />\r\n          )\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MoviesHOC(MoviesList)\r\n","import React from 'react'\r\nimport CallApi from '../../utils/apies'\r\nimport _ from 'lodash'\r\n\r\nexport default (Component) =>\r\n  class MoviesHOC extends React.PureComponent {\r\n    constructor() {\r\n      super()\r\n\r\n      this.state = {\r\n        movies: [],\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { filters, page } = this.props\r\n      this.getMovies(filters, page)\r\n    }\r\n\r\n    componentDidUpdate(p) {\r\n      const { onChangePage, filters, page } = this.props\r\n\r\n      if (!_.isEqual(p.filters, filters)) {\r\n        onChangePage(1)\r\n        this.getMovies(filters)\r\n      }\r\n\r\n      if (p.page !== page) {\r\n        this.getMovies(filters, page)\r\n      }\r\n    }\r\n\r\n    getSettingsMovies = (nameState, url) => {\r\n      const { session_id, account_id, page } = this.props\r\n      const apiParams = {\r\n        language: 'ru-RU',\r\n        session_id,\r\n        page,\r\n      }\r\n\r\n      return CallApi.get(`/account/${account_id}${url}`, {\r\n        params: apiParams,\r\n      }).then((data) => {\r\n        this.setState({\r\n          [nameState]: data.results,\r\n        })\r\n      })\r\n    }\r\n\r\n    getMovies = (filters, page = 1) => {\r\n      const { sort_by, primary_release_year, with_genres } = filters\r\n      const { onChangeTotalPages } = this.props\r\n\r\n      const apiParams = {\r\n        language: 'ru-RU',\r\n        sort_by,\r\n        page,\r\n        primary_release_year,\r\n        with_genres: with_genres.join(','),\r\n      }\r\n\r\n      return CallApi.get('/discover/movie', { params: apiParams }).then(\r\n        (data) => {\r\n          onChangeTotalPages(data.total_pages)\r\n          this.setState({ movies: data.results })\r\n        }\r\n      )\r\n    }\r\n\r\n    render() {\r\n      const { movies, favouriteMovies, watchList } = this.state\r\n      return (\r\n        <Component\r\n          account_id={this.props.account_id}\r\n          session_id={this.props.session_id}\r\n          movies={movies}\r\n          favouriteMovies={favouriteMovies}\r\n          watchList={watchList}\r\n        />\r\n      )\r\n    }\r\n  }\r\n","import React from 'react'\r\nimport Filters from '../../Filters/Filters.jsx'\r\nimport MoviesList from '../../Movies/MoviesList.jsx'\r\n\r\nexport default class MoviesPage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.initialState = {\r\n      filters: {\r\n        sort_by: 'popularity.desc',\r\n        primary_release_year: new Date().getFullYear(),\r\n        with_genres: [],\r\n      },\r\n      page: 1,\r\n      total_pages: '',\r\n    }\r\n\r\n    this.state = { ...this.initialState }\r\n  }\r\n\r\n  onChangeFilters = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    this.setState((s) => ({\r\n      filters: {\r\n        ...s.filters,\r\n        [name]: value,\r\n      },\r\n    }))\r\n  }\r\n\r\n  onChangePage = (page) => {\r\n    this.setState({\r\n      page,\r\n    })\r\n  }\r\n\r\n  onChangeTotalPages = (total_pages) => {\r\n    this.setState({\r\n      total_pages,\r\n    })\r\n  }\r\n\r\n  resetFilters = () => {\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  render() {\r\n    const { filters, page, total_pages } = this.state\r\n    return (\r\n      <div className=\"main container\">\r\n        <div className=\"row\">\r\n          <div className=\"filters col-3\">\r\n            <Filters\r\n              onChangeFilters={this.onChangeFilters}\r\n              filters={filters}\r\n              page={page}\r\n              onChangePage={this.onChangePage}\r\n              total_pages={total_pages}\r\n              resetFilters={this.resetFilters}\r\n            />\r\n          </div>\r\n          <div className=\"movies col-9\">\r\n            <MoviesList\r\n              filters={filters}\r\n              page={page}\r\n              onChangePage={this.onChangePage}\r\n              onChangeTotalPages={this.onChangeTotalPages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Star, StarBorder, Bookmark, BookmarkBorder } from '@material-ui/icons'\r\nimport CallApi from '../../../utils/apies'\r\n\r\nexport default class MoviePage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      movie: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    CallApi.get(`/movie/${this.props.match.params.id}`, {\r\n      params: {\r\n        language: 'ru-RU',\r\n      },\r\n    }).then((data) => this.setState(() => ({ movie: data })))\r\n  }\r\n\r\n  forEachGenresCompaniesCountries(arr = []) {\r\n    let resultArr = []\r\n\r\n    arr.forEach((item) => {\r\n      resultArr.push(item.name)\r\n    })\r\n\r\n    return resultArr\r\n  }\r\n\r\n  forEachFavouriteMoviesOrWatchlist = (moviesArr = [], movie = {}) => {\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  render() {\r\n    const { movie } = this.state\r\n    const { movies, moviesActions, auth } = this.props\r\n    console.log(movie)\r\n\r\n    return (\r\n      <div className=\"movie-page\">\r\n        <div className=\"movie-header\">\r\n          <div className=\"movie-header__custom-bg text-right\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${\r\n                movie.belongs_to_collection\r\n                  ? movie.belongs_to_collection.backdrop_path\r\n                  : movie.backdrop_path\r\n              }`}\r\n              alt=\"\"\r\n              className=\"movie-header__bg-img\"\r\n            />\r\n          </div>\r\n          <div className=\"movie-header__single-column\">\r\n            <div className=\"movie-header__content-wrapper h-100\">\r\n              <div className=\"container h-100\">\r\n                <div className=\"row h-100\">\r\n                  <div className=\"col-4 pr-0 d-flex align-items-center h-100\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                      width=\"290\"\r\n                      alt=\"\"\r\n                      className=\"movie-header__poster-img rounded-lg\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-8 pl-0 text-left d-flex justify-content-center flex-column h-100\">\r\n                    <div className=\"movie-header__description\">\r\n                      <h2 className=\"movie-header__title mb-1\">\r\n                        {movie.title} ( {movie.original_title} )\r\n                      </h2>\r\n                      <p className=\"pl-1 movie-header__release mb-0\">\r\n                        {movie.release_date} ·{' '}\r\n                        {this.forEachGenresCompaniesCountries(\r\n                          movie.genres\r\n                        ).join(', ')}\r\n                      </p>\r\n                      <div className=\"d-flex align-items-center mt-4 mb-4\">\r\n                        <div className=\"movie-header__rate d-flex justify-content-center align-items-center rounded-circle\">\r\n                          {String(movie.vote_average).length === 1\r\n                            ? `${movie.vote_average}.0`\r\n                            : movie.vote_average}\r\n                        </div>\r\n                        <p className=\"mb-0 pl-3\" style={{ lineHeight: '18px' }}>\r\n                          Пользовательский <br /> счёт\r\n                        </p>\r\n                        <div\r\n                          className=\"ml-5 movie-header__favourite cursor-pointer d-flex justify-content-center align-items-center rounded-circle\"\r\n                          onClick={() => {\r\n                            moviesActions.updateFavouriteMovies({\r\n                              account_id: auth.account_id,\r\n                              session_id: auth.session_id,\r\n                              media_id: movie.id,\r\n                            })\r\n                          }}\r\n                        >\r\n                          {this.forEachFavouriteMoviesOrWatchlist(\r\n                            movies.favouriteMovies,\r\n                            movie\r\n                          ) ? (\r\n                            <Star />\r\n                          ) : (\r\n                            <StarBorder />\r\n                          )}\r\n                        </div>\r\n                        <div\r\n                          className=\"ml-2 movie-header__watchlist cursor-pointer d-flex justify-content-center align-items-center rounded-circle\"\r\n                          onClick={() => {\r\n                            moviesActions.updateWatchlist({\r\n                              account_id: auth.account_id,\r\n                              session_id: auth.session_id,\r\n                              media_id: movie.id,\r\n                            })\r\n                          }}\r\n                        >\r\n                          {this.forEachFavouriteMoviesOrWatchlist(\r\n                            movies.watchlist,\r\n                            movie\r\n                          ) ? (\r\n                            <Bookmark />\r\n                          ) : (\r\n                            <BookmarkBorder />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"movie-header__tagline mb-1\">{movie.tagline}</p>\r\n                      <p className=\"mb-1\">\r\n                        <span className=\"font-weight-bold\">Статус</span> -{' '}\r\n                        {movie.status}\r\n                      </p>\r\n                      <p className=\"mb-1\">\r\n                        <span className=\"font-weight-bold\">Язык оригинала</span>{' '}\r\n                        - {movie.original_language}\r\n                      </p>\r\n                      <p className=\"mb-1\">\r\n                        <span className=\"font-weight-bold\">Компания</span> -{' '}\r\n                        {this.forEachGenresCompaniesCountries(\r\n                          movie.production_companies\r\n                        ).join(', ')}\r\n                      </p>\r\n                      <p className=\"mb-3\">\r\n                        <span className=\"font-weight-bold\">Страна</span> -{' '}\r\n                        {this.forEachGenresCompaniesCountries(\r\n                          movie.production_countries\r\n                        ).join(', ')}\r\n                      </p>\r\n                      <h4 className=\"mb-1\">Обзор</h4>\r\n                      <p>{movie.overview}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Star, StarBorder, Bookmark, BookmarkBorder } from '@material-ui/icons'\r\nimport { months } from '../../../../data/months'\r\nimport { withAuth } from '../../../../hoc/WithAuth.jsx'\r\n\r\nconst FavouriteMoviesTab = (props) => {\r\n  const getMonthNameOnMonthNumber = (movie) => {\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  const forEachFavouriteMoviesOrWatchlist = (moviesArr, movie) => {\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  const { auth, moviesActions, movies } = props\r\n  return (\r\n    <div className=\"favourite-movies-tab\">\r\n      <div className=\"favourite-movies\">\r\n        {movies.favouriteMovies.map((movie) => {\r\n          const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n            getMonthNameOnMonthNumber(movie)[0].shortName\r\n          } ${movie.release_date.substr(0, 4)}`\r\n          return (\r\n            <div className=\"favourite-movies__item\" key={movie.id}>\r\n              <div className=\"poster-img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt=\"\"\r\n                  className=\"poster-img__image\"\r\n                />\r\n              </div>\r\n              <div className=\"description\">\r\n                <div className=\"description__top-block\">\r\n                  <div className=\"rate\">\r\n                    {String(movie.vote_average).length === 1\r\n                      ? `${movie.vote_average}.0`\r\n                      : movie.vote_average}\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <p className=\"movie-name\">\r\n                      <Link to={`/kinopoisk/movie/${movie.id}`}>\r\n                        {movie.title}\r\n                      </Link>\r\n                    </p>\r\n                    <p className=\"release-date\">{releaseDate}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__middle-block\">\r\n                  <div className=\"movie-overview\">\r\n                    <p className=\"text\">{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__bottom-block\">\r\n                  <div\r\n                    className=\"favourite cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateFavouriteMovies({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.favouriteMovies,\r\n                        movie\r\n                      ) ? (\r\n                        <Star />\r\n                      ) : (\r\n                        <StarBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Избранное</span>\r\n                  </div>\r\n                  <div\r\n                    className=\"watchlist cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateWatchlist({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.watchlist,\r\n                        movie\r\n                      ) ? (\r\n                        <Bookmark />\r\n                      ) : (\r\n                        <BookmarkBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Посмотреть</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(FavouriteMoviesTab)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Star, StarBorder, Bookmark, BookmarkBorder } from '@material-ui/icons'\r\nimport { months } from '../../../../data/months'\r\nimport { withAuth } from '../../../../hoc/WithAuth.jsx'\r\n\r\nconst WatchlistTab = (props) => {\r\n  const getMonthNameOnMonthNumber = (movie) => {\r\n    return months.filter((month) => {\r\n      return month.month === movie.release_date.substr(5, 2)\r\n    })\r\n  }\r\n\r\n  const forEachFavouriteMoviesOrWatchlist = (moviesArr, movie) => {\r\n    let starMovie = false\r\n\r\n    moviesArr.forEach((item) => {\r\n      if (item.id === movie.id) {\r\n        starMovie = true\r\n      }\r\n    })\r\n\r\n    return starMovie\r\n  }\r\n\r\n  const { auth, moviesActions, movies } = props\r\n  return (\r\n    <div className=\"favourite-movies-tab\">\r\n      <div className=\"favourite-movies\">\r\n        {movies.watchlist.map((movie) => {\r\n          const releaseDate = `${movie.release_date.substr(8, 2)} ${\r\n            getMonthNameOnMonthNumber(movie)[0].shortName\r\n          } ${movie.release_date.substr(0, 4)}`\r\n          return (\r\n            <div className=\"favourite-movies__item\" key={movie.id}>\r\n              <div className=\"poster-img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt=\"\"\r\n                  className=\"poster-img__image\"\r\n                />\r\n              </div>\r\n              <div className=\"description\">\r\n                <div className=\"description__top-block\">\r\n                  <div className=\"rate\">\r\n                    {String(movie.vote_average).length === 1\r\n                      ? `${movie.vote_average}.0`\r\n                      : movie.vote_average}\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <p className=\"movie-name\">\r\n                      <Link to={`/kinopoisk/movie/${movie.id}`}>\r\n                        {movie.title}\r\n                      </Link>\r\n                    </p>\r\n                    <p className=\"release-date\">{releaseDate}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__middle-block\">\r\n                  <div className=\"movie-overview\">\r\n                    <p className=\"text\">{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description__bottom-block\">\r\n                  <div\r\n                    className=\"favourite cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateFavouriteMovies({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.favouriteMovies,\r\n                        movie\r\n                      ) ? (\r\n                        <Star />\r\n                      ) : (\r\n                        <StarBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Избранное</span>\r\n                  </div>\r\n                  <div\r\n                    className=\"watchlist cursor-pointer\"\r\n                    onClick={() => {\r\n                      moviesActions.updateWatchlist({\r\n                        account_id: auth.account_id,\r\n                        session_id: auth.session_id,\r\n                        media_id: movie.id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    <div className=\"icon\">\r\n                      {forEachFavouriteMoviesOrWatchlist(\r\n                        props.movies.watchlist,\r\n                        movie\r\n                      ) ? (\r\n                        <Bookmark />\r\n                      ) : (\r\n                        <BookmarkBorder />\r\n                      )}\r\n                    </div>\r\n                    <span className=\"settings-title\">Посмотреть</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(WatchlistTab)\r\n","import React from 'react'\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap'\r\nimport classnames from 'classnames'\r\nimport { withAuth } from '../../../hoc/WithAuth.jsx'\r\nimport FavouriteMoviesTab from './Tabs/FavouriteMoviesTab.jsx'\r\nimport WatchlistTab from './Tabs/WatchlistTab.jsx'\r\n\r\nclass UserPage extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      activeTab: '1',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { authActions } = this.props\r\n    authActions.toggleUserModal(false)\r\n  }\r\n\r\n  render() {\r\n    const { auth, movies } = this.props\r\n\r\n    const toggle = (tab) => {\r\n      if (this.state.activeTab !== tab)\r\n        this.setState(() => ({ activeTab: tab }))\r\n    }\r\n\r\n    const { activeTab } = this.state\r\n\r\n    return (\r\n      <div className=\"user-page\">\r\n        <div className=\"user-page__header\">\r\n          <div className=\"bg-image\">\r\n            <img\r\n              className=\"image\"\r\n              src=\"/kinopoisk/images/user-page.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"inner-content\">\r\n            <div className=\"content container\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${auth.user.avatar.tmdb.avatar_path}`}\r\n                alt=\"\"\r\n                className=\"user-img\"\r\n              />\r\n              <div className=\"user-data\">\r\n                <h2 className=\"user-data__name\">{auth.user.name}</h2>\r\n                <p className=\"user-data__nickname\">{auth.user.username}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <Nav tabs>\r\n            <NavItem className=\"cursor-pointer\">\r\n              <NavLink\r\n                className={classnames({ active: activeTab === '1' })}\r\n                onClick={() => {\r\n                  toggle('1')\r\n                }}\r\n              >\r\n                Избранные\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"cursor-pointer\">\r\n              <NavLink\r\n                className={classnames({ active: activeTab === '2' })}\r\n                onClick={() => {\r\n                  toggle('2')\r\n                }}\r\n              >\r\n                Список отслеживания\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {movies.favouriteMovies.length > 0 ? (\r\n                    <FavouriteMoviesTab />\r\n                  ) : (\r\n                    <p className=\"mt-4\">У вас нет избранных фильмов...</p>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {movies.watchlist.length > 0 ? (\r\n                    <WatchlistTab />\r\n                  ) : (\r\n                    <p className=\"mt-4\">\r\n                      У вас нет выбранных фильмов для просмотра...\r\n                    </p>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(UserPage)\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.jsx'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport MoviesPage from './components/pages/MoviesPage/MoviesPage.jsx'\r\nimport MoviePage from './components/pages/MoviePage/MoviePage.jsx'\r\nimport UserPage from './components/pages/UserPage/UserPage.jsx'\r\nimport { withAuth } from './hoc/WithAuth.jsx'\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    const { auth, authActions, moviesActions } = this.props\r\n    if (auth.session_id) {\r\n      authActions.fetchAuth(auth.session_id)\r\n      moviesActions.fetchFavouriteMovies({\r\n        session_id: auth.session_id,\r\n        account_id: auth.account_id,\r\n      })\r\n      moviesActions.fetchWatchlist({\r\n        session_id: auth.session_id,\r\n        account_id: auth.account_id,\r\n      })\r\n    } else {\r\n      authActions.toggleAuthFormModal(true)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, moviesActions, auth } = this.props\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"header\">\r\n          <Header />\r\n        </div>\r\n        <Route path=\"/kinopoisk/profile/:id\" render={() => <UserPage />} />\r\n        <Route\r\n          path=\"/kinopoisk/movie/:id\"\r\n          render={(params) => (\r\n            <MoviePage\r\n              {...params}\r\n              movies={movies}\r\n              moviesActions={moviesActions}\r\n              auth={auth}\r\n            />\r\n          )}\r\n        />\r\n        <Route exact path=\"/kinopoisk/\" component={MoviesPage} />\r\n        <div className=\"footer\"></div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Cookies from 'universal-cookie'\r\n\r\nexport const cookies = new Cookies()\r\n","import * as types from './auth.types'\r\nimport { cookies } from '../../utils/cookies'\r\n\r\nconst initialState = {\r\n  user: null,\r\n  session_id: cookies.get('session_id'),\r\n  account_id: cookies.get('account_id'),\r\n  isAuth: false,\r\n  showUserModal: false,\r\n  showAuthFormModal: false,\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_AUTH:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        session_id: action.payload.session_id,\r\n        account_id: action.payload.user.id,\r\n        isAuth: true,\r\n        showUserModal: false,\r\n        showAuthFormModal: false,\r\n      }\r\n    case types.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        session_id: null,\r\n        account_id: null,\r\n        isAuth: false,\r\n        showUserModal: false,\r\n        showAuthFormModal: false,\r\n      }\r\n    case types.TOGGLE_USER_MODAL:\r\n      return {\r\n        ...state,\r\n        showUserModal: action.payload,\r\n      }\r\n    case types.TOGGLE_AUTH_FORM_MODAL:\r\n      return {\r\n        ...state,\r\n        showAuthFormModal: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as types from './movies.types'\r\n\r\nconst initialState = {\r\n  favouriteMovies: [],\r\n  watchlist: [],\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.FETCH_SUCCESS_FAVOURITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: action.payload.results,\r\n      }\r\n    case types.FETCH_SUCCESS_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        watchlist: action.payload.results,\r\n      }\r\n    case types.UPDATE_SUCCESS_FAVOURITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: action.payload.results,\r\n      }\r\n    case types.UPDATE_SUCCESS_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        watchlist: action.payload.results,\r\n      }\r\n    case types.CLEAR_FAVOURITE_MOVIES_AND_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        favouriteMovies: [],\r\n        watchlist: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport authReducer from '../redux/auth/auth.reducer'\r\nimport moviesReducer from '../redux/movies/movies.reducer'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  movies: moviesReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { UPDATE_AUTH, LOGOUT } from './auth/auth.types'\r\nimport { cookies } from '../utils/cookies'\r\nimport rootReducer from '../redux/rootReducer'\r\n\r\nconst updateCookies = () => (next) => (action) => {\r\n  if (action.type === UPDATE_AUTH) {\r\n    cookies.set('session_id', action.payload.session_id, {\r\n      path: '/kinopoisk/',\r\n      maxAge: 2592000,\r\n    })\r\n  }\r\n  if (action.type === LOGOUT) {\r\n    cookies.remove('session_id', {\r\n      path: '/kinopoisk/',\r\n    })\r\n  }\r\n  return next(action)\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk, updateCookies))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport WebFont from 'webfontloader'\r\nimport store from './redux/store'\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Open Sans'],\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('kinopoisk')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}